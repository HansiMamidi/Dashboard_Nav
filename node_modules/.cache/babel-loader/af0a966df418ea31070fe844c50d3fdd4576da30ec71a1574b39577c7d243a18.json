{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n\n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n\n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n\n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n\n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n//   return (\n//     <div className=\"App p-input-filled\">\n\n//       <header className=\"App-header\">\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         <h2>Add Form Data to Table</h2>\n//         <Profile />\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nimport React, { useRef } from \"react\";\nimport { useFormik } from 'formik';\nimport { Editor } from 'primereact/editor';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormikDoc() {\n  _s();\n  const toast = useRef(null);\n  const show = () => {\n    toast.current.show({\n      severity: 'success',\n      summary: 'Blog Submitted',\n      detail: 'The blog is uploaded'\n    });\n  };\n  const renderHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ql-formats\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ql-bold\",\n        \"aria-label\": \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ql-italic\",\n        \"aria-label\": \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ql-underline\",\n        \"aria-label\": \"Underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n  const header = renderHeader();\n  const formik = useFormik({\n    initialValues: {\n      blog: ''\n    },\n    validate: data => {\n      let errors = {};\n      if (!data.blog || data.blog === `n`) {\n        errors.blog = 'Content is required.';\n      }\n      return errors;\n    },\n    onSubmit: data => {\n      data.blog && show();\n      formik.resetForm();\n    }\n  });\n  const isFormFieldInvalid = name => !!(formik.touched[name] && formik.errors[name]);\n  const getFormErrorMessage = name => {\n    return isFormFieldInvalid(name) ? /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: formik.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 102\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        id: \"blog\",\n        name: \"blog\",\n        value: formik.values.blog,\n        headerTemplate: header,\n        onTextChange: e => {\n          formik.setFieldValue('blog', e.textValue);\n        },\n        style: {\n          height: '320px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-content-between align-items-center gap-3 mt-3\",\n        children: [getFormErrorMessage('blog'), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          label: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(FormikDoc, \"ERftbxDCx1y7n/i8sWV2fSuwbAg=\", false, function () {\n  return [useFormik];\n});\n_c = FormikDoc;\nvar _c;\n$RefreshReg$(_c, \"FormikDoc\");","map":{"version":3,"names":["React","useRef","useFormik","Editor","Button","Toast","jsxDEV","_jsxDEV","FormikDoc","_s","toast","show","current","severity","summary","detail","renderHeader","className","children","fileName","_jsxFileName","lineNumber","columnNumber","header","formik","initialValues","blog","validate","data","errors","onSubmit","resetForm","isFormFieldInvalid","name","touched","getFormErrorMessage","handleSubmit","ref","id","value","values","headerTemplate","onTextChange","e","setFieldValue","textValue","style","height","type","label","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n    \n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n        \n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n        \n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n      \n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n\n// import React from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n//   return (\n//     <div className=\"App p-input-filled\">\n      \n//       <header className=\"App-header\">\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         <h2>Add Form Data to Table</h2>\n//         <Profile />\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n\nimport React, { useRef } from \"react\";\nimport { useFormik } from 'formik';\nimport { Editor } from 'primereact/editor';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\n\nexport default function FormikDoc() {\n    const toast = useRef(null);\n\n    const show = () => {\n        toast.current.show({ severity: 'success', summary: 'Blog Submitted', detail: 'The blog is uploaded' });\n    };\n\n    const renderHeader = () => {\n        return (\n            <span className=\"ql-formats\">\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n            </span>\n        );\n    };\n\n    const header = renderHeader();\n\n    const formik = useFormik({\n        initialValues: {\n            blog: ''\n        },\n        validate: (data) => {\n            let errors = {};\n\n            if (!data.blog || data.blog === `n`) {\n                \n                errors.blog = 'Content is required.';\n            }\n\n            return errors;\n        },\n        onSubmit: (data) => {\n            data.blog && show();\n            formik.resetForm();\n        }\n    });\n\n    const isFormFieldInvalid = (name) => !!(formik.touched[name] && formik.errors[name]);\n\n    const getFormErrorMessage = (name) => {\n        return isFormFieldInvalid(name) ? <small className=\"p-error\">{formik.errors[name]}</small> : <small className=\"p-error\">&nbsp;</small>;\n    };\n\n    return (\n        <div className=\"card\">\n            <form onSubmit={formik.handleSubmit}>\n                <Toast ref={toast} />\n                <Editor\n                    id=\"blog\"\n                    name=\"blog\"\n                    value={formik.values.blog}\n                    headerTemplate={header}\n                    onTextChange={(e) => {\n                        formik.setFieldValue('blog', e.textValue);\n                    }}\n                    style={{ height: '320px' }}\n                />\n                <div className=\"flex flex-wrap justify-content-between align-items-center gap-3 mt-3\">\n                    {getFormErrorMessage('blog')}\n                    <Button type=\"submit\" label=\"Save\" />\n                </div>\n            </form>\n        </div>\n    )\n}\n        "],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,KAAK,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMU,IAAI,GAAGA,CAAA,KAAM;IACfD,KAAK,CAACE,OAAO,CAACD,IAAI,CAAC;MAAEE,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE,gBAAgB;MAAEC,MAAM,EAAE;IAAuB,CAAC,CAAC;EAC1G,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,oBACIT,OAAA;MAAMU,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACxBX,OAAA;QAAQU,SAAS,EAAC,SAAS;QAAC,cAAW;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvDf,OAAA;QAAQU,SAAS,EAAC,WAAW;QAAC,cAAW;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC3Df,OAAA;QAAQU,SAAS,EAAC,cAAc;QAAC,cAAW;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAEf,CAAC;EAED,MAAMC,MAAM,GAAGP,YAAY,CAAC,CAAC;EAE7B,MAAMQ,MAAM,GAAGtB,SAAS,CAAC;IACrBuB,aAAa,EAAE;MACXC,IAAI,EAAE;IACV,CAAC;IACDC,QAAQ,EAAGC,IAAI,IAAK;MAChB,IAAIC,MAAM,GAAG,CAAC,CAAC;MAEf,IAAI,CAACD,IAAI,CAACF,IAAI,IAAIE,IAAI,CAACF,IAAI,KAAM,GAAE,EAAE;QAEjCG,MAAM,CAACH,IAAI,GAAG,sBAAsB;MACxC;MAEA,OAAOG,MAAM;IACjB,CAAC;IACDC,QAAQ,EAAGF,IAAI,IAAK;MAChBA,IAAI,CAACF,IAAI,IAAIf,IAAI,CAAC,CAAC;MACnBa,MAAM,CAACO,SAAS,CAAC,CAAC;IACtB;EACJ,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAIC,IAAI,IAAK,CAAC,EAAET,MAAM,CAACU,OAAO,CAACD,IAAI,CAAC,IAAIT,MAAM,CAACK,MAAM,CAACI,IAAI,CAAC,CAAC;EAEpF,MAAME,mBAAmB,GAAIF,IAAI,IAAK;IAClC,OAAOD,kBAAkB,CAACC,IAAI,CAAC,gBAAG1B,OAAA;MAAOU,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEM,MAAM,CAACK,MAAM,CAACI,IAAI;IAAC;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAAGf,OAAA;MAAOU,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAC1I,CAAC;EAED,oBACIf,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBX,OAAA;MAAMuB,QAAQ,EAAEN,MAAM,CAACY,YAAa;MAAAlB,QAAA,gBAChCX,OAAA,CAACF,KAAK;QAACgC,GAAG,EAAE3B;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBf,OAAA,CAACJ,MAAM;QACHmC,EAAE,EAAC,MAAM;QACTL,IAAI,EAAC,MAAM;QACXM,KAAK,EAAEf,MAAM,CAACgB,MAAM,CAACd,IAAK;QAC1Be,cAAc,EAAElB,MAAO;QACvBmB,YAAY,EAAGC,CAAC,IAAK;UACjBnB,MAAM,CAACoB,aAAa,CAAC,MAAM,EAAED,CAAC,CAACE,SAAS,CAAC;QAC7C,CAAE;QACFC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAQ;MAAE;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFf,OAAA;QAAKU,SAAS,EAAC,sEAAsE;QAAAC,QAAA,GAChFiB,mBAAmB,CAAC,MAAM,CAAC,eAC5B5B,OAAA,CAACH,MAAM;UAAC4C,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC;QAAM;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACb,EAAA,CAlEuBD,SAAS;EAAA,QAmBdN,SAAS;AAAA;AAAAgD,EAAA,GAnBJ1C,SAAS;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}