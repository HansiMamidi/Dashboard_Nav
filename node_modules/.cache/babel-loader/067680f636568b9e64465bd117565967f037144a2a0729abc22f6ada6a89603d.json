{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\CombinedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { saveAs } from 'file-saver';\nimport './CombinedBarChart.css'; // Import your custom CSS if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombinedBarChart = ({\n  datasets\n}) => {\n  _s();\n  const labels = datasets.length > 0 ? datasets[0].data.map(entry => entry.date) : [];\n  const chartData = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: `Data Table ${index + 1}`,\n      backgroundColor: getBackgroundColor(index),\n      borderColor: getBorderColor(index),\n      borderWidth: 1,\n      hoverBackgroundColor: getHoverBackgroundColor(index),\n      hoverBorderColor: getHoverBorderColor(index),\n      data: dataset.data.map(entry => entry.totalInvocations)\n    }))\n  };\n  const options = {\n    // ... (rest of the chart options)\n  };\n  const chartStyle = {\n    width: '80%',\n    // Adjust the width as needed\n    margin: '0 auto'\n  };\n  const [menuVisible, setMenuVisible] = useState(false);\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n  const handleDownload = async format => {\n    if (format === 'CSV') {\n      // Handle CSV export\n    } else {\n      const chart = document.querySelector('.chartjs-render-monitor');\n      if (!chart) {\n        return;\n      }\n      const canvas = chart.querySelector('canvas');\n      if (!canvas) {\n        return;\n      }\n      canvas.toBlob(blob => {\n        saveAs(blob, `chart.${format.toLowerCase()}`);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-bar-chart\",\n    style: chartStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chart-menu ${menuVisible ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-icon\",\n        onClick: toggleMenu,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas fa-bars ${menuVisible ? 'open' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), menuVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"menu-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload('SVG'),\n            children: \"Download SVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload('PNG'),\n            children: \"Download PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload('CSV'),\n            children: \"Download CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedBarChart, \"S8fHTNgi/KNDbc3f2iwwwdPIbEc=\");\n_c = CombinedBarChart;\nconst getBackgroundColor = index => {\n  // Define your custom background colors based on the index\n};\nconst getBorderColor = index => {\n  // Define your custom border colors based on the index\n};\nconst getHoverBackgroundColor = index => {\n  // Define your custom hover background colors based on the index\n};\nconst getHoverBorderColor = index => {\n  // Define your custom hover border colors based on the index\n};\nexport default CombinedBarChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedBarChart\");","map":{"version":3,"names":["React","useState","Bar","saveAs","jsxDEV","_jsxDEV","CombinedBarChart","datasets","_s","labels","length","data","map","entry","date","chartData","dataset","index","label","backgroundColor","getBackgroundColor","borderColor","getBorderColor","borderWidth","hoverBackgroundColor","getHoverBackgroundColor","hoverBorderColor","getHoverBorderColor","totalInvocations","options","chartStyle","width","margin","menuVisible","setMenuVisible","toggleMenu","handleDownload","format","chart","document","querySelector","canvas","toBlob","blob","toLowerCase","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/CombinedBarChart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { saveAs } from 'file-saver';\r\nimport './CombinedBarChart.css'; // Import your custom CSS if needed\r\n\r\nconst CombinedBarChart = ({ datasets }) => {\r\n  const labels = datasets.length > 0 ? datasets[0].data.map(entry => entry.date) : [];\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: datasets.map((dataset, index) => ({\r\n      label: `Data Table ${index + 1}`,\r\n      backgroundColor: getBackgroundColor(index),\r\n      borderColor: getBorderColor(index),\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: getHoverBackgroundColor(index),\r\n      hoverBorderColor: getHoverBorderColor(index),\r\n      data: dataset.data.map(entry => entry.totalInvocations),\r\n    })),\r\n  };\r\n\r\n  const options = {\r\n    // ... (rest of the chart options)\r\n  };\r\n\r\n  const chartStyle = {\r\n    width: '80%', // Adjust the width as needed\r\n    margin: '0 auto',\r\n  };\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  const handleDownload = async format => {\r\n    if (format === 'CSV') {\r\n      // Handle CSV export\r\n    } else {\r\n      const chart = document.querySelector('.chartjs-render-monitor');\r\n      if (!chart) {\r\n        return;\r\n      }\r\n  \r\n      const canvas = chart.querySelector('canvas');\r\n      if (!canvas) {\r\n        return;\r\n      }\r\n  \r\n      canvas.toBlob(blob => {\r\n        saveAs(blob, `chart.${format.toLowerCase()}`);\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"combined-bar-chart\" style={chartStyle}>\r\n      <div className={`chart-menu ${menuVisible ? 'open' : ''}`}>\r\n        <div className=\"menu-icon\" onClick={toggleMenu}>\r\n          <i className={`fas fa-bars ${menuVisible ? 'open' : ''}`} />\r\n        </div>\r\n        {menuVisible && (\r\n          <ul className=\"menu-options\">\r\n            <li>\r\n              <button onClick={() => handleDownload('SVG')}>Download SVG</button>\r\n            </li>\r\n            <li>\r\n              <button onClick={() => handleDownload('PNG')}>Download PNG</button>\r\n            </li>\r\n            <li>\r\n              <button onClick={() => handleDownload('CSV')}>Download CSV</button>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <Bar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getBackgroundColor = index => {\r\n  // Define your custom background colors based on the index\r\n};\r\n\r\nconst getBorderColor = index => {\r\n  // Define your custom border colors based on the index\r\n};\r\n\r\nconst getHoverBackgroundColor = index => {\r\n  // Define your custom hover background colors based on the index\r\n};\r\n\r\nconst getHoverBorderColor = index => {\r\n  // Define your custom hover border colors based on the index\r\n};\r\n\r\nexport default CombinedBarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,MAAM,GAAG,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,GAAG,EAAE;EAEnF,MAAMC,SAAS,GAAG;IAChBN,MAAM;IACNF,QAAQ,EAAEA,QAAQ,CAACK,GAAG,CAAC,CAACI,OAAO,EAAEC,KAAK,MAAM;MAC1CC,KAAK,EAAG,cAAaD,KAAK,GAAG,CAAE,EAAC;MAChCE,eAAe,EAAEC,kBAAkB,CAACH,KAAK,CAAC;MAC1CI,WAAW,EAAEC,cAAc,CAACL,KAAK,CAAC;MAClCM,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAEC,uBAAuB,CAACR,KAAK,CAAC;MACpDS,gBAAgB,EAAEC,mBAAmB,CAACV,KAAK,CAAC;MAC5CN,IAAI,EAAEK,OAAO,CAACL,IAAI,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACe,gBAAgB;IACxD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,OAAO,GAAG;IACd;EAAA,CACD;EAED,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,KAAK;IAAE;IACdC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMkC,UAAU,GAAGA,CAAA,KAAM;IACvBD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMG,cAAc,GAAG,MAAMC,MAAM,IAAI;IACrC,IAAIA,MAAM,KAAK,KAAK,EAAE;MACpB;IAAA,CACD,MAAM;MACL,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC;MAC/D,IAAI,CAACF,KAAK,EAAE;QACV;MACF;MAEA,MAAMG,MAAM,GAAGH,KAAK,CAACE,aAAa,CAAC,QAAQ,CAAC;MAC5C,IAAI,CAACC,MAAM,EAAE;QACX;MACF;MAEAA,MAAM,CAACC,MAAM,CAACC,IAAI,IAAI;QACpBxC,MAAM,CAACwC,IAAI,EAAG,SAAQN,MAAM,CAACO,WAAW,CAAC,CAAE,EAAC,CAAC;MAC/C,CAAC,CAAC;IACJ;EACF,CAAC;EAGD,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,oBAAoB;IAACC,KAAK,EAAEhB,UAAW;IAAAiB,QAAA,gBACpD1C,OAAA;MAAKwC,SAAS,EAAG,cAAaZ,WAAW,GAAG,MAAM,GAAG,EAAG,EAAE;MAAAc,QAAA,gBACxD1C,OAAA;QAAKwC,SAAS,EAAC,WAAW;QAACG,OAAO,EAAEb,UAAW;QAAAY,QAAA,eAC7C1C,OAAA;UAAGwC,SAAS,EAAG,eAAcZ,WAAW,GAAG,MAAM,GAAG,EAAG;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACLnB,WAAW,iBACV5B,OAAA;QAAIwC,SAAS,EAAC,cAAc;QAAAE,QAAA,gBAC1B1C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;YAAAW,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACL/C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;YAAAW,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACL/C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;YAAAW,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN/C,OAAA,CAACH,GAAG;MAACS,IAAI,EAAEI,SAAU;MAACc,OAAO,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA3EIF,gBAAgB;AAAA+C,EAAA,GAAhB/C,gBAAgB;AA6EtB,MAAMc,kBAAkB,GAAGH,KAAK,IAAI;EAClC;AAAA,CACD;AAED,MAAMK,cAAc,GAAGL,KAAK,IAAI;EAC9B;AAAA,CACD;AAED,MAAMQ,uBAAuB,GAAGR,KAAK,IAAI;EACvC;AAAA,CACD;AAED,MAAMU,mBAAmB,GAAGV,KAAK,IAAI;EACnC;AAAA,CACD;AAED,eAAeX,gBAAgB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}