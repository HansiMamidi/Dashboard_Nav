{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n  const [editingRows, setEditingRows] = useState({});\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    setData(prevData => [...prevData, {\n      name,\n      age,\n      email\n    }]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n  const isRowEditing = rowData => {\n    return editingRows[rowData.email];\n  };\n  const onRowEditInit = event => {\n    const rowIndex = event.index;\n    let updatedEditingRows = {\n      ...editingRows\n    };\n    updatedEditingRows[data[rowIndex].email] = true;\n    setEditingRows(updatedEditingRows);\n  };\n  const onRowEditSave = event => {\n    const rowIndex = event.index;\n    let updatedEditingRows = {\n      ...editingRows\n    };\n    delete updatedEditingRows[data[rowIndex].email];\n    setEditingRows(updatedEditingRows);\n  };\n  const onRowEditCancel = event => {\n    const rowIndex = event.index;\n    let updatedEditingRows = {\n      ...editingRows\n    };\n    delete updatedEditingRows[data[rowIndex].email];\n    setEditingRows(updatedEditingRows);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Add\",\n        onClick: addRow,\n        className: \"p-button-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: data,\n      editMode: \"row\",\n      dataKey: \"email\",\n      onRowEditInit: onRowEditInit,\n      onRowEditSave: onRowEditSave,\n      onRowEditCancel: onRowEditCancel,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"name\",\n        header: \"Name\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['name'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"age\",\n        header: \"Age\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['age'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"email\",\n        header: \"Email\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['email'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        rowEditor: true,\n        style: {\n          width: '70px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"W4Ma1tEuyjAexolXhtNJebpSYuo=\");\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","InputText","Button","DataTable","Column","jsxDEV","_jsxDEV","EditableTable","_s","name","setName","age","setAge","email","setEmail","data","setData","editingRows","setEditingRows","addRow","alert","prevData","onEditorValueChange","props","value","rowIndex","field","updatedData","isRowEditing","rowData","onRowEditInit","event","index","updatedEditingRows","onRowEditSave","onRowEditCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","required","type","label","onClick","className","editMode","dataKey","header","editor","rowEditor","style","width","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nconst EditableTable = () => {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n  const [editingRows, setEditingRows] = useState({});\n\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert('Please fill in all fields.');\n      return;\n    }\n\n    setData((prevData) => [\n      ...prevData,\n      { name, age, email }\n    ]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n\n  const isRowEditing = (rowData) => {\n    return editingRows[rowData.email];\n  };\n\n  const onRowEditInit = (event) => {\n    const rowIndex = event.index;\n    let updatedEditingRows = { ...editingRows };\n    updatedEditingRows[data[rowIndex].email] = true;\n    setEditingRows(updatedEditingRows);\n  };\n\n  const onRowEditSave = (event) => {\n    const rowIndex = event.index;\n    let updatedEditingRows = { ...editingRows };\n    delete updatedEditingRows[data[rowIndex].email];\n    setEditingRows(updatedEditingRows);\n  };\n\n  const onRowEditCancel = (event) => {\n    const rowIndex = event.index;\n    let updatedEditingRows = { ...editingRows };\n    delete updatedEditingRows[data[rowIndex].email];\n    setEditingRows(updatedEditingRows);\n  };\n\n  return (\n    <div>\n      <h2>Editable Table</h2>\n      <form>\n        <label htmlFor=\"name\">Name:</label>\n        <InputText id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\n\n        <label htmlFor=\"age\">Age:</label>\n        <InputText id=\"age\" value={age} onChange={(e) => setAge(e.target.value)} required />\n\n        <label htmlFor=\"email\">Email:</label>\n        <InputText id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n\n        <Button type=\"button\" label=\"Add\" onClick={addRow} className=\"p-button-primary\" />\n      </form>\n\n      <DataTable value={data} editMode=\"row\" dataKey=\"email\" onRowEditInit={onRowEditInit} onRowEditSave={onRowEditSave} onRowEditCancel={onRowEditCancel}>\n        <Column field=\"name\" header=\"Name\" editor={(props) => <InputText type=\"text\" value={props.rowData['name']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"age\" header=\"Age\" editor={(props) => <InputText type=\"text\" value={props.rowData['age']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"email\" header=\"Email\" editor={(props) => <InputText type=\"text\" value={props.rowData['email']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column rowEditor style={{ width: '70px' }} />\n      </DataTable>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}