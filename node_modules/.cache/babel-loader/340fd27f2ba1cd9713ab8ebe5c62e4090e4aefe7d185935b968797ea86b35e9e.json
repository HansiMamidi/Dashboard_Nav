{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst CombinedBarChart = ({\n  data1,\n  data2\n}) => {\n  const labels = data1.map(entry => entry.date);\n  const datasets = [{\n    label: 'Total Invocations (Data 1)',\n    backgroundColor: 'rgba(66, 165, 245, 0.6)',\n    // Blue color for Data 1\n    data: data1.map(entry => entry.totalInvocations)\n  }, {\n    label: 'Total Invocations (Data 2)',\n    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n    // Red color for Data 2\n    data: data2.map(entry => entry.totalInvocations)\n  }];\n  const options = {\n    indexAxis: 'y',\n    // Use 'y' for vertical grouped bar chart\n    plugins: {\n      title: {\n        display: true,\n        text: 'Total Invocations',\n        align: 'start',\n        padding: {\n          top: 10,\n          left: 20\n        }\n      }\n    },\n    scales: {\n      x: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Remediation'\n        }\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          autoSkip: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-bar-chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels,\n        datasets\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = CombinedBarChart;\nexport default CombinedBarChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedBarChart\");","map":{"version":3,"names":["React","Bar","Chart","registerables","jsxDEV","_jsxDEV","register","CombinedBarChart","data1","data2","labels","map","entry","date","datasets","label","backgroundColor","data","totalInvocations","options","indexAxis","plugins","title","display","text","align","padding","top","left","scales","x","stacked","beginAtZero","y","ticks","autoSkip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst CombinedBarChart = ({ data1, data2 }) => {\n  const labels = data1.map(entry => entry.date);\n  const datasets = [\n    {\n      label: 'Total Invocations (Data 1)',\n      backgroundColor: 'rgba(66, 165, 245, 0.6)', // Blue color for Data 1\n      data: data1.map(entry => entry.totalInvocations),\n    },\n    {\n      label: 'Total Invocations (Data 2)',\n      backgroundColor: 'rgba(255, 99, 132, 0.6)', // Red color for Data 2\n      data: data2.map(entry => entry.totalInvocations),\n    },\n  ];\n\n  const options = {\n    indexAxis: 'y', // Use 'y' for vertical grouped bar chart\n    plugins: {\n      title: {\n        display: true,\n        text: 'Total Invocations',\n        align: 'start',\n        padding: {\n          top: 10,\n          left: 20,\n        },\n      },\n    },\n    scales: {\n      x: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Remediation',\n        },\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          autoSkip: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"combined-bar-chart\">\n      <Bar data={{ labels, datasets }} options={options} />\n    </div>\n  );\n};\n\nexport default CombinedBarChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhC,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC7C,MAAMC,MAAM,GAAGF,KAAK,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC7C,MAAMC,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,4BAA4B;IACnCC,eAAe,EAAE,yBAAyB;IAAE;IAC5CC,IAAI,EAAET,KAAK,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACM,gBAAgB;EACjD,CAAC,EACD;IACEH,KAAK,EAAE,4BAA4B;IACnCC,eAAe,EAAE,yBAAyB;IAAE;IAC5CC,IAAI,EAAER,KAAK,CAACE,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACM,gBAAgB;EACjD,CAAC,CACF;EAED,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,GAAG;IAAE;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,mBAAmB;QACzBC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;UACPC,GAAG,EAAE,EAAE;UACPC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE,IAAI;QACbC,WAAW,EAAE,IAAI;QACjBV,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDS,CAAC,EAAE;QACDF,OAAO,EAAE,IAAI;QACbG,KAAK,EAAE;UACLC,QAAQ,EAAE;QACZ;MACF;IACF;EACF,CAAC;EAED,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjChC,OAAA,CAACJ,GAAG;MAACgB,IAAI,EAAE;QAAEP,MAAM;QAAEI;MAAS,CAAE;MAACK,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACC,EAAA,GAnDInC,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}