{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, Fragment } from \"react\";\n// import Form from \"./Form\";\n// import Table from \"./Table\";\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n\n// function Profile() {\n//   const [tableData, setTableData] = useState([]);\n//   const [formObject, setFormObject] = useState({\n//     name: \"\",\n//     email: \"\",\n//     profile: \"\",\n//     country: \"\"\n//   });\n\n//   const onValChange = (event) => {\n//     const value = (res) => ({\n//       ...res,\n//       [event.target.name]: event.target.value,\n//     });\n//     setFormObject(value);\n//   };\n//   const onFormSubmit = (event) => {\n//     event.preventDefault();\n//     const checkVal = !Object.values(formObject).every((res) => res === \"\");\n//     if (checkVal) {\n//       const dataObj = (data) => [...data, formObject];\n//       setTableData(dataObj);\n//       const isEmpty = { name: \"\", email: \"\", profile: \"\" };\n//       setFormObject(isEmpty);\n//     }\n//   };\n//   return (\n//     <Fragment>\n//       <Form\n//         onValChange={onValChange}\n//         formObject={formObject}\n//         onFormSubmit={onFormSubmit}\n//       />\n//       <Table tableData={tableData} />\n//     </Fragment>\n//   );\n// }\n// export default Profile;\n\nimport React, { useState } from 'react';\nimport Customer from './Customer';\nimport EditCustomer from './EditCustomer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Customers({\n  customers,\n  onUpdateCustomer\n}) {\n  _s();\n  // state for conditional render of edit form\n  const [isEditing, setIsEditing] = useState(false);\n  // state for edit form inputs\n  const [editForm, setEditForm] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n\n  // when PATCH request happens; auto-hides the form, pushes changes to display\n  function handleCustomerUpdate(updatedCustomer) {\n    setIsEditing(false);\n    onUpdateCustomer(updatedCustomer);\n  }\n\n  // capture user input in edit form inputs\n  function handleChange(e) {\n    setEditForm({\n      ...editForm,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  // needed logic for conditional rendering of the form - shows the customer you want when you want them, and hides it when you don't\n  function changeEditState(customer) {\n    if (customer.id === editForm.id) {\n      setIsEditing(isEditing => !isEditing); // hides the form\n    } else if (isEditing === false) {\n      setIsEditing(isEditing => !isEditing); // shows the form\n    }\n  }\n\n  // capture the customer you wish to edit, set to state\n  function captureEdit(clickedCustomer) {\n    let filtered = customers.filter(customer => customer.id === clickedCustomer.id);\n    setEditForm(filtered[0]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(EditCustomer, {\n      editForm: editForm,\n      handleChange: handleChange,\n      handleCustomerUpdate: handleCustomerUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Modify Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Customer, {\n          customer: customer,\n          captureEdit: captureEdit,\n          changeEditState: changeEditState\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n_s(Customers, \"Zbn+Txa8ye+jDlFc35RxSKaXHgE=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useState","Customer","EditCustomer","jsxDEV","_jsxDEV","Customers","customers","onUpdateCustomer","_s","isEditing","setIsEditing","editForm","setEditForm","id","name","email","phone","handleCustomerUpdate","updatedCustomer","handleChange","e","target","value","changeEditState","customer","captureEdit","clickedCustomer","filtered","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/components/Profile.js"],"sourcesContent":["// import React, { useState, Fragment } from \"react\";\r\n// import Form from \"./Form\";\r\n// import Table from \"./Table\";\r\n// // import {  InputText } from 'primereact/inputtext';\r\n// // import { Button } from 'primereact/button';\r\n\r\n// function Profile() {\r\n//   const [tableData, setTableData] = useState([]);\r\n//   const [formObject, setFormObject] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     profile: \"\",\r\n//     country: \"\"\r\n//   });\r\n\r\n//   const onValChange = (event) => {\r\n//     const value = (res) => ({\r\n//       ...res,\r\n//       [event.target.name]: event.target.value,\r\n//     });\r\n//     setFormObject(value);\r\n//   };\r\n//   const onFormSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const checkVal = !Object.values(formObject).every((res) => res === \"\");\r\n//     if (checkVal) {\r\n//       const dataObj = (data) => [...data, formObject];\r\n//       setTableData(dataObj);\r\n//       const isEmpty = { name: \"\", email: \"\", profile: \"\" };\r\n//       setFormObject(isEmpty);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <Fragment>\r\n//       <Form\r\n//         onValChange={onValChange}\r\n//         formObject={formObject}\r\n//         onFormSubmit={onFormSubmit}\r\n//       />\r\n//       <Table tableData={tableData} />\r\n//     </Fragment>\r\n//   );\r\n// }\r\n// export default Profile;\r\n\r\n\r\n\r\nimport React, {useState} from 'react'\r\nimport Customer from './Customer'\r\nimport EditCustomer from './EditCustomer'\r\n\r\nfunction Customers({customers, onUpdateCustomer}) {\r\n// state for conditional render of edit form\r\n  const [isEditing, setIsEditing] = useState(false);\r\n// state for edit form inputs\r\n  const [editForm, setEditForm] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  })\r\n\r\n// when PATCH request happens; auto-hides the form, pushes changes to display\r\n  function handleCustomerUpdate(updatedCustomer) {\r\n      setIsEditing(false);\r\n      onUpdateCustomer(updatedCustomer);\r\n    }\r\n\r\n// capture user input in edit form inputs\r\n  function handleChange(e) {\r\n    setEditForm({\r\n    ...editForm,\r\n    [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n// needed logic for conditional rendering of the form - shows the customer you want when you want them, and hides it when you don't\r\n  function changeEditState(customer) {\r\n    if (customer.id === editForm.id) {\r\n      setIsEditing(isEditing => !isEditing) // hides the form\r\n    } else if (isEditing === false) {\r\n      setIsEditing(isEditing => !isEditing) // shows the form\r\n    }\r\n  }\r\n\r\n// capture the customer you wish to edit, set to state\r\n  function captureEdit(clickedCustomer) {\r\n    let filtered = customers.filter(customer => customer.id === clickedCustomer.id)\r\n    setEditForm(filtered[0])\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        {isEditing?\r\n          (<EditCustomer\r\n            editForm={editForm}\r\n            handleChange={handleChange}\r\n            handleCustomerUpdate={handleCustomerUpdate}\r\n          />) : null}\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Customer ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Modify Customer</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              { customers.map(customer =>\r\n                <Customer\r\n                  key={customer.id}\r\n                  customer={customer}\r\n                  captureEdit={captureEdit}\r\n                  changeEditState={changeEditState}\r\n                />) }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n   )\r\n}\r\nexport default Customers"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}