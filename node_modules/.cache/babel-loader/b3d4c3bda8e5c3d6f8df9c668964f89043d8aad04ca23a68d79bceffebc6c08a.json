{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\DataTableComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTableComponent = ({\n  formData\n}) => {\n  _s();\n  const [editingRows, setEditingRows] = useState({});\n  const [newData, setNewData] = useState({\n    id: null,\n    Name: '',\n    mailId: '',\n    Profile: '',\n    Country: ''\n  });\n  const columns = [{\n    field: 'id',\n    header: 'ID'\n  }, {\n    field: 'Name',\n    header: 'Name'\n  }, {\n    field: 'mailId',\n    header: 'Mail Id'\n  }, {\n    field: 'Profile',\n    header: 'Profile'\n  }, {\n    field: 'Country',\n    header: 'Country'\n  }, {\n    field: 'action',\n    header: 'Action'\n  }];\n  const editRow = rowData => {\n    setEditingRows(prevState => ({\n      ...prevState,\n      [rowData.id]: true\n    }));\n  };\n  const cancelEditRow = rowData => {\n    setEditingRows(prevState => ({\n      ...prevState,\n      [rowData.id]: false\n    }));\n  };\n  const saveEditRow = rowData => {\n    setEditingRows(prevState => ({\n      ...prevState,\n      [rowData.id]: false\n    }));\n    // You can add logic here to save the edited data, e.g., send it to the backend.\n  };\n\n  const deleteRow = rowData => {\n    // You can add logic here to delete the row, e.g., send a delete request to the backend.\n    // In this example, we'll remove the row from the local state.\n    setNewData(prevData => prevData.filter(item => item.id !== rowData.id));\n  };\n  const addRow = () => {\n    // Generate a unique ID for the new row (this can be done differently depending on your requirements).\n    const newId = formData.length + 1;\n    setNewData(prevData => [...prevData, {\n      ...newData,\n      id: newId\n    }]);\n    setNewData({\n      id: null,\n      Name: '',\n      mailId: '',\n      Profile: '',\n      Country: ''\n    });\n  };\n  const actionBodyTemplate = rowData => {\n    if (editingRows[rowData.id]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-button p-button-success p-mr-2\",\n          onClick: () => saveEditRow(rowData),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-button p-button-danger\",\n          onClick: () => cancelEditRow(rowData),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-button p-button-primary p-mr-2\",\n          onClick: () => editRow(rowData),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-button p-button-warning\",\n          onClick: () => deleteRow(rowData),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const onEditorValueChange = (props, value) => {\n    setNewData(prevData => ({\n      ...prevData,\n      [props.field]: value\n    }));\n  };\n  const header = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"p-button p-button-success p-mb-2\",\n      onClick: addRow,\n      children: \"Add New Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DataTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: formData,\n      header: header,\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(Column, {\n        field: column.field,\n        header: column.header,\n        editor: props => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newData[column.field],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this),\n        editorValidator: props => props.rowData[props.field].length > 0,\n        editorValidatorMessage: `${column.header} is required`,\n        style: {\n          width: '200px'\n        },\n        body: column.field === 'action' ? actionBodyTemplate : null\n      }, column.field, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTableComponent, \"aLjNj0clc5AY8K01uANA8aMUq8g=\");\n_c = DataTableComponent;\nexport default DataTableComponent;\nvar _c;\n$RefreshReg$(_c, \"DataTableComponent\");","map":{"version":3,"names":["React","useState","DataTable","Column","jsxDEV","_jsxDEV","DataTableComponent","formData","_s","editingRows","setEditingRows","newData","setNewData","id","Name","mailId","Profile","Country","columns","field","header","editRow","rowData","prevState","cancelEditRow","saveEditRow","deleteRow","prevData","filter","item","addRow","newId","length","actionBodyTemplate","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onEditorValueChange","props","value","map","column","editor","type","onChange","e","target","editorValidator","editorValidatorMessage","style","width","body","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/DataTableComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nconst DataTableComponent = ({ formData }) => {\r\n  const [editingRows, setEditingRows] = useState({});\r\n  const [newData, setNewData] = useState({\r\n    id: null,\r\n    Name: '',\r\n    mailId: '',\r\n    Profile: '',\r\n    Country: '',\r\n  });\r\n\r\n  const columns = [\r\n    { field: 'id', header: 'ID' },\r\n    { field: 'Name', header: 'Name' },\r\n    { field: 'mailId', header: 'Mail Id' },\r\n    { field: 'Profile', header: 'Profile' },\r\n    { field: 'Country', header: 'Country' },\r\n    { field: 'action', header: 'Action' },\r\n  ];\r\n\r\n  const editRow = (rowData) => {\r\n    setEditingRows((prevState) => ({ ...prevState, [rowData.id]: true }));\r\n  };\r\n\r\n  const cancelEditRow = (rowData) => {\r\n    setEditingRows((prevState) => ({ ...prevState, [rowData.id]: false }));\r\n  };\r\n\r\n  const saveEditRow = (rowData) => {\r\n    setEditingRows((prevState) => ({ ...prevState, [rowData.id]: false }));\r\n    // You can add logic here to save the edited data, e.g., send it to the backend.\r\n  };\r\n\r\n  const deleteRow = (rowData) => {\r\n    // You can add logic here to delete the row, e.g., send a delete request to the backend.\r\n    // In this example, we'll remove the row from the local state.\r\n    setNewData((prevData) => prevData.filter((item) => item.id !== rowData.id));\r\n  };\r\n\r\n  const addRow = () => {\r\n    // Generate a unique ID for the new row (this can be done differently depending on your requirements).\r\n    const newId = formData.length + 1;\r\n    setNewData((prevData) => [...prevData, { ...newData, id: newId }]);\r\n    setNewData({\r\n      id: null,\r\n      Name: '',\r\n      mailId: '',\r\n      Profile: '',\r\n      Country: '',\r\n    });\r\n  };\r\n\r\n  const actionBodyTemplate = (rowData) => {\r\n    if (editingRows[rowData.id]) {\r\n      return (\r\n        <div>\r\n          <button className=\"p-button p-button-success p-mr-2\" onClick={() => saveEditRow(rowData)}>\r\n            Save\r\n          </button>\r\n          <button className=\"p-button p-button-danger\" onClick={() => cancelEditRow(rowData)}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button className=\"p-button p-button-primary p-mr-2\" onClick={() => editRow(rowData)}>\r\n            Edit\r\n          </button>\r\n          <button className=\"p-button p-button-warning\" onClick={() => deleteRow(rowData)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onEditorValueChange = (props, value) => {\r\n    setNewData((prevData) => ({ ...prevData, [props.field]: value }));\r\n  };\r\n\r\n  const header = (\r\n    <div>\r\n      <button className=\"p-button p-button-success p-mb-2\" onClick={addRow}>\r\n        Add New Row\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h3>DataTable</h3>\r\n      <DataTable value={formData} header={header}>\r\n        {columns.map((column) => (\r\n          <Column\r\n            key={column.field}\r\n            field={column.field}\r\n            header={column.header}\r\n            editor={(props) => (\r\n              <input\r\n                type=\"text\"\r\n                value={newData[column.field]}\r\n                onChange={(e) => onEditorValueChange(props, e.target.value)}\r\n              />\r\n            )}\r\n            editorValidator={(props) => props.rowData[props.field].length > 0}\r\n            editorValidatorMessage={`${column.header} is required`}\r\n            style={{ width: '200px' }}\r\n            body={column.field === 'action' ? actionBodyTemplate : null}\r\n          />\r\n        ))}\r\n      </DataTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTableComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACrCY,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC7B;IAAED,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAO,CAAC,EACjC;IAAED,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAU,CAAC,EACtC;IAAED,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAU,CAAC,EACvC;IAAED,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAU,CAAC,EACvC;IAAED,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAS,CAAC,CACtC;EAED,MAAMC,OAAO,GAAIC,OAAO,IAAK;IAC3BZ,cAAc,CAAEa,SAAS,KAAM;MAAE,GAAGA,SAAS;MAAE,CAACD,OAAO,CAACT,EAAE,GAAG;IAAK,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,MAAMW,aAAa,GAAIF,OAAO,IAAK;IACjCZ,cAAc,CAAEa,SAAS,KAAM;MAAE,GAAGA,SAAS;MAAE,CAACD,OAAO,CAACT,EAAE,GAAG;IAAM,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAMY,WAAW,GAAIH,OAAO,IAAK;IAC/BZ,cAAc,CAAEa,SAAS,KAAM;MAAE,GAAGA,SAAS;MAAE,CAACD,OAAO,CAACT,EAAE,GAAG;IAAM,CAAC,CAAC,CAAC;IACtE;EACF,CAAC;;EAED,MAAMa,SAAS,GAAIJ,OAAO,IAAK;IAC7B;IACA;IACAV,UAAU,CAAEe,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKS,OAAO,CAACT,EAAE,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnB;IACA,MAAMC,KAAK,GAAGxB,QAAQ,CAACyB,MAAM,GAAG,CAAC;IACjCpB,UAAU,CAAEe,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;MAAE,GAAGhB,OAAO;MAAEE,EAAE,EAAEkB;IAAM,CAAC,CAAC,CAAC;IAClEnB,UAAU,CAAC;MACTC,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgB,kBAAkB,GAAIX,OAAO,IAAK;IACtC,IAAIb,WAAW,CAACa,OAAO,CAACT,EAAE,CAAC,EAAE;MAC3B,oBACER,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAQ8B,SAAS,EAAC,kCAAkC;UAACC,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACH,OAAO,CAAE;UAAAY,QAAA,EAAC;QAE1F;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnC,OAAA;UAAQ8B,SAAS,EAAC,0BAA0B;UAACC,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACF,OAAO,CAAE;UAAAY,QAAA,EAAC;QAEpF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAEV,CAAC,MAAM;MACL,oBACEnC,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAQ8B,SAAS,EAAC,kCAAkC;UAACC,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAACC,OAAO,CAAE;UAAAY,QAAA,EAAC;QAEtF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnC,OAAA;UAAQ8B,SAAS,EAAC,2BAA2B;UAACC,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAACJ,OAAO,CAAE;UAAAY,QAAA,EAAC;QAEjF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAEV;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC5C/B,UAAU,CAAEe,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACe,KAAK,CAACvB,KAAK,GAAGwB;IAAM,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMvB,MAAM,gBACVf,OAAA;IAAA6B,QAAA,eACE7B,OAAA;MAAQ8B,SAAS,EAAC,kCAAkC;MAACC,OAAO,EAAEN,MAAO;MAAAI,QAAA,EAAC;IAEtE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CACN;EAED,oBACEnC,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnC,OAAA,CAACH,SAAS;MAACyC,KAAK,EAAEpC,QAAS;MAACa,MAAM,EAAEA,MAAO;MAAAc,QAAA,EACxChB,OAAO,CAAC0B,GAAG,CAAEC,MAAM,iBAClBxC,OAAA,CAACF,MAAM;QAELgB,KAAK,EAAE0B,MAAM,CAAC1B,KAAM;QACpBC,MAAM,EAAEyB,MAAM,CAACzB,MAAO;QACtB0B,MAAM,EAAGJ,KAAK,iBACZrC,OAAA;UACE0C,IAAI,EAAC,MAAM;UACXJ,KAAK,EAAEhC,OAAO,CAACkC,MAAM,CAAC1B,KAAK,CAAE;UAC7B6B,QAAQ,EAAGC,CAAC,IAAKR,mBAAmB,CAACC,KAAK,EAAEO,CAAC,CAACC,MAAM,CAACP,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CACD;QACFW,eAAe,EAAGT,KAAK,IAAKA,KAAK,CAACpB,OAAO,CAACoB,KAAK,CAACvB,KAAK,CAAC,CAACa,MAAM,GAAG,CAAE;QAClEoB,sBAAsB,EAAG,GAAEP,MAAM,CAACzB,MAAO,cAAc;QACvDiC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAC1BC,IAAI,EAAEV,MAAM,CAAC1B,KAAK,KAAK,QAAQ,GAAGc,kBAAkB,GAAG;MAAK,GAbvDY,MAAM,CAAC1B,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAclB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlHIF,kBAAkB;AAAAkD,EAAA,GAAlBlD,kBAAkB;AAoHxB,eAAeA,kBAAkB;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}