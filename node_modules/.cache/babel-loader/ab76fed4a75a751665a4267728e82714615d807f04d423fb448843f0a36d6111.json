{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n\n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n\n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n\n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n\n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, {useEffect, useState } from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n\n//   const [profileData, setProfileData] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://localhost:3000/profileData\")\n//     .then((resp)=>resp.json())\n//     .then((data)=> {\n//       setProfileData(data)\n//     });\n//   },[]);\n\n//   function onUpdateProfileData(updatedProfileData){\n//     const updatedProfile=profileData.map(\n//       profile => {\n//         if(profile.id === updatedProfileData.id){\n//           return updatedProfileData\n//         } else {return profile}\n//         }\n//     )\n//     setProfileData(updatedProfile)\n//   }\n\n//   return (\n//     <div className=\"App p-input-filled\">\n//       <Profile profileData={profileData} onUpdatedProfileData={onUpdateProfileData}/>      \n//       {/* <header className=\"App-header\"> */}\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         {/* <h2>Add Form Data to Table</h2>\n//         <Profile /> */}\n//       {/* </header> */}\n//     </div>\n//   );\n// }\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { ProductService } from './service/ProductService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CellEditingDemo() {\n  _s();\n  const [products, setProducts] = useState(null);\n  const columns = [{\n    field: 'code',\n    header: 'Code'\n  }, {\n    field: 'name',\n    header: 'Name'\n  }, {\n    field: 'quantity',\n    header: 'Quantity'\n  }, {\n    field: 'price',\n    header: 'Price'\n  }];\n  useEffect(() => {\n    ProductService.getProductsMini().then(data => setProducts(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const isPositiveInteger = val => {\n    let str = String(val);\n    str = str.trim();\n    if (!str) {\n      return false;\n    }\n    str = str.replace(/^0+/, '') || '0';\n    let n = Math.floor(Number(str));\n    return n !== Infinity && String(n) === str && n >= 0;\n  };\n  const onCellEditComplete = e => {\n    let {\n      rowData,\n      newValue,\n      field,\n      originalEvent: event\n    } = e;\n    switch (field) {\n      case 'quantity':\n      case 'price':\n        if (isPositiveInteger(newValue)) rowData[field] = newValue;else event.preventDefault();\n        break;\n      default:\n        if (newValue.trim().length > 0) rowData[field] = newValue;else event.preventDefault();\n        break;\n    }\n  };\n  const cellEditor = options => {\n    if (options.field === 'price') return priceEditor(options);else return textEditor(options);\n  };\n  const textEditor = options => {\n    return /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      value: options.value,\n      onChange: e => options.editorCallback(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, this);\n  };\n  const priceEditor = options => {\n    return /*#__PURE__*/_jsxDEV(InputNumber, {\n      value: options.value,\n      onValueChange: e => options.editorCallback(e.value),\n      mode: \"currency\",\n      currency: \"USD\",\n      locale: \"en-US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }, this);\n  };\n  const priceBodyTemplate = rowData => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(rowData.price);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-fluid\",\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      value: products,\n      editMode: \"cell\",\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      children: columns.map(({\n        field,\n        header\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Column, {\n          field: field,\n          header: header,\n          style: {\n            width: '25%'\n          },\n          body: field === 'price' && priceBodyTemplate,\n          editor: options => cellEditor(options),\n          onCellEditComplete: onCellEditComplete\n        }, field, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n_s(CellEditingDemo, \"8/Hhf2onsmvGCykHlTCLKPkfVcY=\");\n_c = CellEditingDemo;\nvar _c;\n$RefreshReg$(_c, \"CellEditingDemo\");","map":{"version":3,"names":["React","useEffect","useState","DataTable","Column","InputText","InputNumber","ProductService","jsxDEV","_jsxDEV","CellEditingDemo","_s","products","setProducts","columns","field","header","getProductsMini","then","data","isPositiveInteger","val","str","String","trim","replace","n","Math","floor","Number","Infinity","onCellEditComplete","e","rowData","newValue","originalEvent","event","preventDefault","length","cellEditor","options","priceEditor","textEditor","type","value","onChange","editorCallback","target","fileName","_jsxFileName","lineNumber","columnNumber","onValueChange","mode","currency","locale","priceBodyTemplate","Intl","NumberFormat","style","format","price","className","children","editMode","tableStyle","minWidth","map","width","body","editor","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n    \n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n        \n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n        \n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n      \n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n\n// import React, {useEffect, useState } from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n  \n//   const [profileData, setProfileData] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://localhost:3000/profileData\")\n//     .then((resp)=>resp.json())\n//     .then((data)=> {\n//       setProfileData(data)\n//     });\n//   },[]);\n\n//   function onUpdateProfileData(updatedProfileData){\n//     const updatedProfile=profileData.map(\n//       profile => {\n//         if(profile.id === updatedProfileData.id){\n//           return updatedProfileData\n//         } else {return profile}\n//         }\n//     )\n//     setProfileData(updatedProfile)\n//   }\n    \n//   return (\n//     <div className=\"App p-input-filled\">\n//       <Profile profileData={profileData} onUpdatedProfileData={onUpdateProfileData}/>      \n//       {/* <header className=\"App-header\"> */}\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         {/* <h2>Add Form Data to Table</h2>\n//         <Profile /> */}\n//       {/* </header> */}\n//     </div>\n//   );\n// }\n// export default App;\n\n\nimport React, { useEffect, useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { ProductService } from './service/ProductService';\n\nexport default function CellEditingDemo() {\n    const [products, setProducts] = useState(null);\n\n    const columns = [\n        { field: 'code', header: 'Code' },\n        { field: 'name', header: 'Name' },\n        { field: 'quantity', header: 'Quantity' },\n        { field: 'price', header: 'Price' }\n    ];\n\n    useEffect(() => {\n        ProductService.getProductsMini().then((data) => setProducts(data));\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const isPositiveInteger = (val) => {\n        let str = String(val);\n\n        str = str.trim();\n\n        if (!str) {\n            return false;\n        }\n\n        str = str.replace(/^0+/, '') || '0';\n        let n = Math.floor(Number(str));\n\n        return n !== Infinity && String(n) === str && n >= 0;\n    };\n\n    const onCellEditComplete = (e) => {\n        let { rowData, newValue, field, originalEvent: event } = e;\n\n        switch (field) {\n            case 'quantity':\n            case 'price':\n                if (isPositiveInteger(newValue)) rowData[field] = newValue;\n                else event.preventDefault();\n                break;\n\n            default:\n                if (newValue.trim().length > 0) rowData[field] = newValue;\n                else event.preventDefault();\n                break;\n        }\n    };\n\n    const cellEditor = (options) => {\n        if (options.field === 'price') return priceEditor(options);\n        else return textEditor(options);\n    };\n\n    const textEditor = (options) => {\n        return <InputText type=\"text\" value={options.value} onChange={(e) => options.editorCallback(e.target.value)} />;\n    };\n\n    const priceEditor = (options) => {\n        return <InputNumber value={options.value} onValueChange={(e) => options.editorCallback(e.value)} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />;\n    };\n\n    const priceBodyTemplate = (rowData) => {\n        return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(rowData.price);\n    };\n\n    return (\n        <div className=\"card p-fluid\">\n            <DataTable value={products} editMode=\"cell\" tableStyle={{ minWidth: '50rem' }}>\n                {columns.map(({ field, header }) => {\n                    return <Column key={field} field={field} header={header} style={{ width: '25%' }} body={field === 'price' && priceBodyTemplate} editor={(options) => cellEditor(options)} onCellEditComplete={onCellEditComplete} />;\n                })}\n            </DataTable>\n        </div>\n    );\n}\n        "],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,cAAc,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAO,CAAC,EACjC;IAAED,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAO,CAAC,EACjC;IAAED,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAW,CAAC,EACzC;IAAED,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ,CAAC,CACtC;EAEDf,SAAS,CAAC,MAAM;IACZM,cAAc,CAACU,eAAe,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAKN,WAAW,CAACM,IAAI,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IAC/B,IAAIC,GAAG,GAAGC,MAAM,CAACF,GAAG,CAAC;IAErBC,GAAG,GAAGA,GAAG,CAACE,IAAI,CAAC,CAAC;IAEhB,IAAI,CAACF,GAAG,EAAE;MACN,OAAO,KAAK;IAChB;IAEAA,GAAG,GAAGA,GAAG,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;IACnC,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACP,GAAG,CAAC,CAAC;IAE/B,OAAOI,CAAC,KAAKI,QAAQ,IAAIP,MAAM,CAACG,CAAC,CAAC,KAAKJ,GAAG,IAAII,CAAC,IAAI,CAAC;EACxD,CAAC;EAED,MAAMK,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,IAAI;MAAEC,OAAO;MAAEC,QAAQ;MAAEnB,KAAK;MAAEoB,aAAa,EAAEC;IAAM,CAAC,GAAGJ,CAAC;IAE1D,QAAQjB,KAAK;MACT,KAAK,UAAU;MACf,KAAK,OAAO;QACR,IAAIK,iBAAiB,CAACc,QAAQ,CAAC,EAAED,OAAO,CAAClB,KAAK,CAAC,GAAGmB,QAAQ,CAAC,KACtDE,KAAK,CAACC,cAAc,CAAC,CAAC;QAC3B;MAEJ;QACI,IAAIH,QAAQ,CAACV,IAAI,CAAC,CAAC,CAACc,MAAM,GAAG,CAAC,EAAEL,OAAO,CAAClB,KAAK,CAAC,GAAGmB,QAAQ,CAAC,KACrDE,KAAK,CAACC,cAAc,CAAC,CAAC;QAC3B;IACR;EACJ,CAAC;EAED,MAAME,UAAU,GAAIC,OAAO,IAAK;IAC5B,IAAIA,OAAO,CAACzB,KAAK,KAAK,OAAO,EAAE,OAAO0B,WAAW,CAACD,OAAO,CAAC,CAAC,KACtD,OAAOE,UAAU,CAACF,OAAO,CAAC;EACnC,CAAC;EAED,MAAME,UAAU,GAAIF,OAAO,IAAK;IAC5B,oBAAO/B,OAAA,CAACJ,SAAS;MAACsC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEJ,OAAO,CAACI,KAAM;MAACC,QAAQ,EAAGb,CAAC,IAAKQ,OAAO,CAACM,cAAc,CAACd,CAAC,CAACe,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnH,CAAC;EAED,MAAMV,WAAW,GAAID,OAAO,IAAK;IAC7B,oBAAO/B,OAAA,CAACH,WAAW;MAACsC,KAAK,EAAEJ,OAAO,CAACI,KAAM;MAACQ,aAAa,EAAGpB,CAAC,IAAKQ,OAAO,CAACM,cAAc,CAACd,CAAC,CAACY,KAAK,CAAE;MAACS,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAC,KAAK;MAACC,MAAM,EAAC;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrJ,CAAC;EAED,MAAMK,iBAAiB,GAAIvB,OAAO,IAAK;IACnC,OAAO,IAAIwB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,UAAU;MAAEL,QAAQ,EAAE;IAAM,CAAC,CAAC,CAACM,MAAM,CAAC3B,OAAO,CAAC4B,KAAK,CAAC;EACvG,CAAC;EAED,oBACIpD,OAAA;IAAKqD,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzBtD,OAAA,CAACN,SAAS;MAACyC,KAAK,EAAEhC,QAAS;MAACoD,QAAQ,EAAC,MAAM;MAACC,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAAAH,QAAA,EACzEjD,OAAO,CAACqD,GAAG,CAAC,CAAC;QAAEpD,KAAK;QAAEC;MAAO,CAAC,KAAK;QAChC,oBAAOP,OAAA,CAACL,MAAM;UAAaW,KAAK,EAAEA,KAAM;UAACC,MAAM,EAAEA,MAAO;UAAC2C,KAAK,EAAE;YAAES,KAAK,EAAE;UAAM,CAAE;UAACC,IAAI,EAAEtD,KAAK,KAAK,OAAO,IAAIyC,iBAAkB;UAACc,MAAM,EAAG9B,OAAO,IAAKD,UAAU,CAACC,OAAO,CAAE;UAACT,kBAAkB,EAAEA;QAAmB,GAA7LhB,KAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0L,CAAC;MACxN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAACxC,EAAA,CAxEuBD,eAAe;AAAA6D,EAAA,GAAf7D,eAAe;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}