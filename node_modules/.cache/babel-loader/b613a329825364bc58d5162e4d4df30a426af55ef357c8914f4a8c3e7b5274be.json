{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\DataTableComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport 'primeicons/primeicons.css'; // Import the primeicons CSS\nimport 'primereact/resources/themes/saga-blue/theme.css'; // Import PrimeReact theme\nimport 'primereact/resources/primereact.min.css'; // Import PrimeReact styles\nimport 'primeflex/primeflex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataTableComponent = () => {\n  _s();\n  const [formData, setFormData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [newData, setNewData] = useState({\n    Name: '',\n    mailId: '',\n    Profile: '',\n    Country: ''\n  });\n  const editRow = rowData => {\n    setSelectedRow(rowData);\n  };\n  const onInputChange = event => {\n    setSelectedRow(prevRow => ({\n      ...prevRow,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const onRowEditSave = event => {\n    setFormData(prevData => prevData.map(data => data.id === selectedRow.id ? selectedRow : data));\n    setSelectedRow(null);\n  };\n  const onRowEditCancel = event => {\n    setSelectedRow(null);\n  };\n  const onFormInputChange = event => {\n    setNewData(prevData => ({\n      ...prevData,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const addFormData = () => {\n    setFormData(prevData => [...prevData, {\n      id: prevData.length + 1,\n      ...newData\n    }]);\n    setNewData({\n      Name: '',\n      mailId: '',\n      Profile: '',\n      Country: ''\n    });\n  };\n  const actionTemplate = rowData => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedRow === rowData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-button\",\n        onClick: onRowEditSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-button\",\n        onClick: onRowEditCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"p-button\",\n      onClick: () => editRow(rowData),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  const formDataColumns = [{\n    field: 'Name',\n    header: 'Name'\n  }, {\n    field: 'mailId',\n    header: 'Mail Id'\n  }, {\n    field: 'Profile',\n    header: 'Profile'\n  }, {\n    field: 'Country',\n    header: 'Country'\n  }, {\n    field: 'Action',\n    header: 'Action',\n    body: actionTemplate\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Name\",\n        value: newData.Name,\n        placeholder: \"Name\",\n        onChange: onFormInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"mailId\",\n        value: newData.mailId,\n        placeholder: \"Mail Id\",\n        onChange: onFormInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Profile\",\n        value: newData.Profile,\n        placeholder: \"Profile\",\n        onChange: onFormInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Country\",\n        value: newData.Country,\n        placeholder: \"Country\",\n        onChange: onFormInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-button p-button-primary\",\n        onClick: addFormData,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: formData,\n      editable: true,\n      editMode: \"row\",\n      onRowEditInit: event => setSelectedRow(event.data),\n      onRowEditCancel: onRowEditCancel,\n      paginator: true,\n      rows: 5,\n      rowsPerPageOptions: [5, 10, 20],\n      children: formDataColumns.map(col => /*#__PURE__*/_jsxDEV(Column, {\n        field: col.field,\n        header: col.header,\n        editable: selectedRow !== null,\n        editor: selectedRow !== null ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: col.field,\n          value: selectedRow[col.field],\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this) : null\n      }, col.field, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTableComponent, \"8rHIfnjtu0xxEonoSTTAv7A3Qlo=\");\n_c = DataTableComponent;\nexport default DataTableComponent;\nvar _c;\n$RefreshReg$(_c, \"DataTableComponent\");","map":{"version":3,"names":["React","useState","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTableComponent","_s","formData","setFormData","selectedRow","setSelectedRow","newData","setNewData","Name","mailId","Profile","Country","editRow","rowData","onInputChange","event","prevRow","target","name","value","onRowEditSave","prevData","map","data","id","onRowEditCancel","onFormInputChange","addFormData","length","actionTemplate","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","formDataColumns","field","header","body","type","placeholder","onChange","editable","editMode","onRowEditInit","paginator","rows","rowsPerPageOptions","col","editor","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/DataTableComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport 'primeicons/primeicons.css'; // Import the primeicons CSS\r\nimport 'primereact/resources/themes/saga-blue/theme.css'; // Import PrimeReact theme\r\nimport 'primereact/resources/primereact.min.css'; // Import PrimeReact styles\r\nimport 'primeflex/primeflex.css'; \r\n\r\nconst DataTableComponent = () => {\r\n  const [formData, setFormData] = useState([]);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [newData, setNewData] = useState({ Name: '', mailId: '', Profile: '', Country: '' });\r\n\r\n  const editRow = (rowData) => {\r\n    setSelectedRow(rowData);\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    setSelectedRow((prevRow) => ({\r\n      ...prevRow,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const onRowEditSave = (event) => {\r\n    setFormData((prevData) =>\r\n      prevData.map((data) => (data.id === selectedRow.id ? selectedRow : data))\r\n    );\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const onRowEditCancel = (event) => {\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const onFormInputChange = (event) => {\r\n    setNewData((prevData) => ({\r\n      ...prevData,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const addFormData = () => {\r\n    setFormData((prevData) => [\r\n      ...prevData,\r\n      {\r\n        id: prevData.length + 1,\r\n        ...newData,\r\n      },\r\n    ]);\r\n    setNewData({ Name: '', mailId: '', Profile: '', Country: '' });\r\n  };\r\n\r\n  const actionTemplate = (rowData) => (\r\n    <>\r\n      {selectedRow === rowData ? (\r\n        <>\r\n          <button className=\"p-button\" onClick={onRowEditSave}>\r\n            Save\r\n          </button>\r\n          <button className=\"p-button\" onClick={onRowEditCancel}>\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <button className=\"p-button\" onClick={() => editRow(rowData)}>\r\n          Edit\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const formDataColumns = [\r\n    { field: 'Name', header: 'Name' },\r\n    { field: 'mailId', header: 'Mail Id' },\r\n    { field: 'Profile', header: 'Profile' },\r\n    { field: 'Country', header: 'Country' },\r\n    { field: 'Action', header: 'Action', body: actionTemplate },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* Form Input */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          value={newData.Name}\r\n          placeholder=\"Name\"\r\n          onChange={onFormInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"mailId\"\r\n          value={newData.mailId}\r\n          placeholder=\"Mail Id\"\r\n          onChange={onFormInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Profile\"\r\n          value={newData.Profile}\r\n          placeholder=\"Profile\"\r\n          onChange={onFormInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Country\"\r\n          value={newData.Country}\r\n          placeholder=\"Country\"\r\n          onChange={onFormInputChange}\r\n        />\r\n        <button className=\"p-button p-button-primary\" onClick={addFormData}>\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      {/* DataTable */}\r\n      <DataTable\r\n        value={formData}\r\n        editable={true}\r\n        editMode=\"row\"\r\n        onRowEditInit={(event) => setSelectedRow(event.data)}\r\n        onRowEditCancel={onRowEditCancel}\r\n        paginator\r\n        rows={5}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n      >\r\n        {formDataColumns.map((col) => (\r\n          <Column\r\n            key={col.field}\r\n            field={col.field}\r\n            header={col.header}\r\n            editable={selectedRow !== null}\r\n            editor={\r\n              selectedRow !== null ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name={col.field}\r\n                  value={selectedRow[col.field]}\r\n                  onChange={onInputChange}\r\n                />\r\n              ) : null\r\n            }\r\n          />\r\n        ))}\r\n      </DataTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTableComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}