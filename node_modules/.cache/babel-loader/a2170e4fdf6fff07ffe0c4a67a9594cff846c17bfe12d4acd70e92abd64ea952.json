{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\MultiBarGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiBarGraph = ({\n  dataTables\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState(options);\n  useEffect(() => {\n    if (dataTables && dataTables.length > 0) {\n      const datasets = [];\n      let labels = [];\n      dataTables.forEach((table, index) => {\n        const data = table.map(row => row.totalInvocations);\n        labels = table.map(row => row.date);\n        const color = getRandomColor();\n        datasets.push({\n          label: `Remediation ${index + 1}`,\n          data,\n          backgroundColor: color,\n          borderColor: color,\n          borderWidth: 1\n        });\n      });\n      const data = {\n        labels,\n        datasets\n      };\n      setChartData(data);\n    }\n  }, [dataTables]);\n  const handleElementClick = elems => {\n    if (elems.length > 0) {\n      // Update chart options here if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Multi Bar Graph Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions,\n      onElementsClick: handleElementClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiBarGraph, \"Wa/QDd/1en3M+uyfKE9G92yrdC8=\");\n_c = MultiBarGraph;\nconst options = {\n  scales: {\n    x: {\n      type: 'category',\n      stacked: true\n    },\n    y: {\n      stacked: true\n    }\n  }\n};\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nexport default MultiBarGraph;\nvar _c;\n$RefreshReg$(_c, \"MultiBarGraph\");","map":{"version":3,"names":["React","useEffect","useState","Bar","jsxDEV","_jsxDEV","MultiBarGraph","dataTables","_s","chartData","setChartData","chartOptions","setChartOptions","options","length","datasets","labels","forEach","table","index","data","map","row","totalInvocations","date","color","getRandomColor","push","label","backgroundColor","borderColor","borderWidth","handleElementClick","elems","children","fileName","_jsxFileName","lineNumber","columnNumber","onElementsClick","_c","scales","x","type","stacked","y","letters","i","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/MultiBarGraph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst MultiBarGraph = ({ dataTables }) => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartOptions, setChartOptions] = useState(options);\r\n\r\n  useEffect(() => {\r\n    if (dataTables && dataTables.length > 0) {\r\n      const datasets = [];\r\n      let labels = [];\r\n\r\n      dataTables.forEach((table, index) => {\r\n        const data = table.map(row => row.totalInvocations);\r\n        labels = table.map(row => row.date);\r\n        const color = getRandomColor();\r\n\r\n        datasets.push({\r\n          label: `Remediation ${index + 1}`,\r\n          data,\r\n          backgroundColor: color,\r\n          borderColor: color,\r\n          borderWidth: 1,\r\n        });\r\n      });\r\n\r\n      const data = {\r\n        labels,\r\n        datasets,\r\n      };\r\n\r\n      setChartData(data);\r\n    }\r\n  }, [dataTables]);\r\n\r\n  const handleElementClick = (elems) => {\r\n    if (elems.length > 0) {\r\n      // Update chart options here if needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Multi Bar Graph Example</h1>\r\n      <Bar\r\n        data={chartData}\r\n        options={chartOptions}\r\n        onElementsClick={handleElementClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    x: {\r\n      type: 'category',\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getRandomColor() {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport default MultiBarGraph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACW,OAAO,CAAC;EAEzDZ,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,IAAIA,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE;MACvC,MAAMC,QAAQ,GAAG,EAAE;MACnB,IAAIC,MAAM,GAAG,EAAE;MAEfT,UAAU,CAACU,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACnC,MAAMC,IAAI,GAAGF,KAAK,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,gBAAgB,CAAC;QACnDP,MAAM,GAAGE,KAAK,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACE,IAAI,CAAC;QACnC,MAAMC,KAAK,GAAGC,cAAc,CAAC,CAAC;QAE9BX,QAAQ,CAACY,IAAI,CAAC;UACZC,KAAK,EAAG,eAAcT,KAAK,GAAG,CAAE,EAAC;UACjCC,IAAI;UACJS,eAAe,EAAEJ,KAAK;UACtBK,WAAW,EAAEL,KAAK;UAClBM,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAMX,IAAI,GAAG;QACXJ,MAAM;QACND;MACF,CAAC;MAEDL,YAAY,CAACU,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,MAAMyB,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIA,KAAK,CAACnB,MAAM,GAAG,CAAC,EAAE;MACpB;IAAA;EAEJ,CAAC;EAED,oBACET,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCjC,OAAA,CAACF,GAAG;MACFiB,IAAI,EAAEX,SAAU;MAChBI,OAAO,EAAEF,YAAa;MACtB4B,eAAe,EAAEP;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhDIF,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAkDnB,MAAMO,OAAO,GAAG;EACd4B,MAAM,EAAE;IACNC,CAAC,EAAE;MACDC,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE;IACX,CAAC;IACDC,CAAC,EAAE;MACDD,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASlB,cAAcA,CAAA,EAAG;EACxB,MAAMoB,OAAO,GAAG,kBAAkB;EAClC,IAAIrB,KAAK,GAAG,GAAG;EACf,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BtB,KAAK,IAAIqB,OAAO,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOzB,KAAK;AACd;AAEA,eAAenB,aAAa;AAAC,IAAAkC,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}