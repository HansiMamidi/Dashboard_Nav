{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n\n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n\n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n\n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n\n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, {useEffect, useState } from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n\n//   const [profileData, setProfileData] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://localhost:3000/profileData\")\n//     .then((resp)=>resp.json())\n//     .then((data)=> {\n//       setProfileData(data)\n//     });\n//   },[]);\n\n//   function onUpdateProfileData(updatedProfileData){\n//     const updatedProfile=profileData.map(\n//       profile => {\n//         if(profile.id === updatedProfileData.id){\n//           return updatedProfileData\n//         } else {return profile}\n//         }\n//     )\n//     setProfileData(updatedProfile)\n//   }\n\n//   return (\n//     <div className=\"App p-input-filled\">\n//       <Profile profileData={profileData} onUpdatedProfileData={onUpdateProfileData}/>      \n//       {/* <header className=\"App-header\"> */}\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         {/* <h2>Add Form Data to Table</h2>\n//         <Profile /> */}\n//       {/* </header> */}\n//     </div>\n//   );\n// }\n// export default App;\n\nimport React, { useEffect, useState } from \"react\";\nimport Customers from \"./Customers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // set state\n  const [customers, setCustomers] = useState([]);\n\n  // first data grab\n  useEffect(() => {\n    fetch(\"http://localhost:3000/customers\").then(resp => resp.json()).then(data => {\n      setCustomers(data);\n    });\n  }, []);\n\n  // update customers on page after edit\n  function onUpdateCustomer(updatedCustomer) {\n    const updatedCustomers = customers.map(customer => {\n      if (customer.id === updatedCustomer.id) {\n        return updatedCustomer;\n      } else {\n        return customer;\n      }\n    });\n    setCustomers(updatedCustomers);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Customers, {\n      customers: customers,\n      onUpdateCustomer: onUpdateCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Customers","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","fetch","then","resp","json","data","onUpdateCustomer","updatedCustomer","updatedCustomers","map","customer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["// // import logo from './logo.svg';\n// // import './App.css';\n// // import React, { useState, useRef } from \"react\";\n\n// // import {  InputText } from 'primereact/inputtext';\n// // import { Button } from 'primereact/button';\n// // import { Toast } from 'primereact/toast';\n\n// // //theme\n// // import \"primereact/resources/themes/vela-blue/theme.css\";     \n    \n// // //core\n// // import \"primereact/resources/primereact.min.css\";                                       \n        \n// // import \"primeicons/primeicons.css\"\n\n// // function App() {\n// //   const [text,setText] = useState('');\n// //   const toastRef = useRef();\n// //   const onButtonClick = () => {\n// //     if(text)\n// //       toastRef.current.show({severity:'info', summary : 'Success', detail: text})\n// //     else\n// //       toastRef.current.show({severity:'error', summary : 'Error', detail: 'Value is Required'})\n\n// //   }\n// //   return (\n// //     <div className=\"App p-input-filled\">\n// //       <Toast ref={toastRef} />\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <span className=\"p-float-label\">\n// //           <InputText value={text} onChange = { e=>setText(e.target.value)}/>\n// //           <label htmlFor=\"input_txt\">Name</label>\n// //         </span>\n        \n// //         <br/>\n// //         <Button type=\"button\" label=\"Submit\" icon=\"pi pi-check\" onClick = {onButtonClick}></Button>\n      \n// //       </header>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n\n// import React, {useEffect, useState } from \"react\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n// import Profile from \"./components/Profile\";\n\n// //theme\n// import \"primereact/resources/themes/vela-blue/theme.css\";     \n// //core\n// import \"primereact/resources/primereact.min.css\";                                              \n// import \"primeicons/primeicons.css\"\n\n// function App() {\n  \n//   const [profileData, setProfileData] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://localhost:3000/profileData\")\n//     .then((resp)=>resp.json())\n//     .then((data)=> {\n//       setProfileData(data)\n//     });\n//   },[]);\n\n//   function onUpdateProfileData(updatedProfileData){\n//     const updatedProfile=profileData.map(\n//       profile => {\n//         if(profile.id === updatedProfileData.id){\n//           return updatedProfileData\n//         } else {return profile}\n//         }\n//     )\n//     setProfileData(updatedProfile)\n//   }\n    \n//   return (\n//     <div className=\"App p-input-filled\">\n//       <Profile profileData={profileData} onUpdatedProfileData={onUpdateProfileData}/>      \n//       {/* <header className=\"App-header\"> */}\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         {/* <h2>Add Form Data to Table</h2>\n//         <Profile /> */}\n//       {/* </header> */}\n//     </div>\n//   );\n// }\n// export default App;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport Customers from \"./Customers\";\n\nfunction App() {\n// set state\n  const [customers, setCustomers] = useState([]);\n\n// first data grab\n  useEffect(() => {\n    fetch(\"http://localhost:3000/customers\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        setCustomers(data)\n      });\n  }, []);\n\n// update customers on page after edit\n  function onUpdateCustomer(updatedCustomer) {\n    const updatedCustomers = customers.map(\n      customer => {\n        if (customer.id === updatedCustomer.id) {\n          return updatedCustomer\n        } else {return customer}\n      }\n    )\n    setCustomers(updatedCustomers)\n  }\n\n  return (\n    <div>\n      <Customers\n        customers={customers}\n        onUpdateCustomer={onUpdateCustomer}\n      />\n    </div>\n  );\n}\nexport default App;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACED,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAK;MACdL,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAER;EACE,SAASC,gBAAgBA,CAACC,eAAe,EAAE;IACzC,MAAMC,gBAAgB,GAAGT,SAAS,CAACU,GAAG,CACpCC,QAAQ,IAAI;MACV,IAAIA,QAAQ,CAACC,EAAE,KAAKJ,eAAe,CAACI,EAAE,EAAE;QACtC,OAAOJ,eAAe;MACxB,CAAC,MAAM;QAAC,OAAOG,QAAQ;MAAA;IACzB,CACF,CAAC;IACDV,YAAY,CAACQ,gBAAgB,CAAC;EAChC;EAEA,oBACEZ,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACF,SAAS;MACRK,SAAS,EAAEA,SAAU;MACrBO,gBAAgB,EAAEA;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}