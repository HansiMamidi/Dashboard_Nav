{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\CombinedBarChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst CombinedBarChart = ({\n  data1,\n  data2\n}) => {\n  const combinedData = data1.map(entry1 => {\n    const matchingEntry = data2.find(entry2 => entry2.date === entry1.date);\n    if (matchingEntry) {\n      return {\n        date: entry1.date,\n        totalInvocationsData1: entry1.totalInvocations,\n        totalInvocationsData2: matchingEntry.totalInvocations\n      };\n    } else {\n      return {\n        date: entry1.date,\n        totalInvocationsData1: entry1.totalInvocations,\n        totalInvocationsData2: 0\n      };\n    }\n  });\n  const chartData = {\n    labels: combinedData.map(entry => entry.date),\n    datasets: [{\n      label: 'Total Invocations (Data 1)',\n      backgroundColor: 'rgba(66, 165, 245, 0.6)',\n      // Blue color for Data 1\n      data: combinedData.map(entry => entry.totalInvocationsData1)\n    }, {\n      label: 'Total Invocations (Data 2)',\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      // Red color for Data 2\n      data: combinedData.map(entry => entry.totalInvocationsData2)\n    }]\n  };\n  const options = {\n    indexAxis: 'y',\n    // Use 'y' for horizontal bar chart\n    scales: {\n      x: {\n        beginAtZero: true\n      },\n      y: {\n        ticks: {\n          autoSkip: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-bar-chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = CombinedBarChart;\nexport default CombinedBarChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedBarChart\");","map":{"version":3,"names":["React","Bar","Chart","registerables","jsxDEV","_jsxDEV","register","CombinedBarChart","data1","data2","combinedData","map","entry1","matchingEntry","find","entry2","date","totalInvocationsData1","totalInvocations","totalInvocationsData2","chartData","labels","entry","datasets","label","backgroundColor","data","options","indexAxis","scales","x","beginAtZero","y","ticks","autoSkip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/CombinedBarChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\n\r\nconst CombinedBarChart = ({ data1, data2 }) => {\r\n  const combinedData = data1.map(entry1 => {\r\n    const matchingEntry = data2.find(entry2 => entry2.date === entry1.date);\r\n    if (matchingEntry) {\r\n      return {\r\n        date: entry1.date,\r\n        totalInvocationsData1: entry1.totalInvocations,\r\n        totalInvocationsData2: matchingEntry.totalInvocations,\r\n      };\r\n    } else {\r\n      return {\r\n        date: entry1.date,\r\n        totalInvocationsData1: entry1.totalInvocations,\r\n        totalInvocationsData2: 0,\r\n      };\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    labels: combinedData.map(entry => entry.date),\r\n    datasets: [\r\n      {\r\n        label: 'Total Invocations (Data 1)',\r\n        backgroundColor: 'rgba(66, 165, 245, 0.6)', // Blue color for Data 1\r\n        data: combinedData.map(entry => entry.totalInvocationsData1),\r\n      },\r\n      {\r\n        label: 'Total Invocations (Data 2)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.6)', // Red color for Data 2\r\n        data: combinedData.map(entry => entry.totalInvocationsData2),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    indexAxis: 'y', // Use 'y' for horizontal bar chart\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n      },\r\n      y: {\r\n        ticks: {\r\n          autoSkip: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"combined-bar-chart\">\r\n      <Bar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombinedBarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAGhC,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC7C,MAAMC,YAAY,GAAGF,KAAK,CAACG,GAAG,CAACC,MAAM,IAAI;IACvC,MAAMC,aAAa,GAAGJ,KAAK,CAACK,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAKJ,MAAM,CAACI,IAAI,CAAC;IACvE,IAAIH,aAAa,EAAE;MACjB,OAAO;QACLG,IAAI,EAAEJ,MAAM,CAACI,IAAI;QACjBC,qBAAqB,EAAEL,MAAM,CAACM,gBAAgB;QAC9CC,qBAAqB,EAAEN,aAAa,CAACK;MACvC,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QACLF,IAAI,EAAEJ,MAAM,CAACI,IAAI;QACjBC,qBAAqB,EAAEL,MAAM,CAACM,gBAAgB;QAC9CC,qBAAqB,EAAE;MACzB,CAAC;IACH;EACF,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEX,YAAY,CAACC,GAAG,CAACW,KAAK,IAAIA,KAAK,CAACN,IAAI,CAAC;IAC7CO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BAA4B;MACnCC,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,IAAI,EAAEhB,YAAY,CAACC,GAAG,CAACW,KAAK,IAAIA,KAAK,CAACL,qBAAqB;IAC7D,CAAC,EACD;MACEO,KAAK,EAAE,4BAA4B;MACnCC,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,IAAI,EAAEhB,YAAY,CAACC,GAAG,CAACW,KAAK,IAAIA,KAAK,CAACH,qBAAqB;IAC7D,CAAC;EAEL,CAAC;EAED,MAAMQ,OAAO,GAAG;IACdC,SAAS,EAAE,GAAG;IAAE;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf,CAAC;MACDC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLC,QAAQ,EAAE;QACZ;MACF;IACF;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjC/B,OAAA,CAACJ,GAAG;MAACyB,IAAI,EAAEN,SAAU;MAACO,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACC,EAAA,GArDIlC,gBAAgB;AAuDtB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}