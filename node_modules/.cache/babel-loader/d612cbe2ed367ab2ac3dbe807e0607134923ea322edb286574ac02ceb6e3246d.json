{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\CombinedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { saveAs } from 'file-saver';\nimport './CombinedBarChart.css';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst CombinedBarChart = ({\n  datasets\n}) => {\n  _s();\n  const labels = datasets.length > 0 ? datasets[0].data.map(entry => entry.date) : [];\n  const chartData = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: `Data Table ${index + 1}`,\n      backgroundColor: getBackgroundColor(index),\n      data: dataset.data.map(entry => entry.totalInvocations)\n    }))\n  };\n  const options = {\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        beginAtZero: true,\n        stacked: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    maintainAspectRatio: false\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n  const handleDownload = async format => {\n    // ... (same download logic as before)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `download-menu ${menuOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"Toggle Download Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => handleDownload('SVG'),\n          children: \"Download SVG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => handleDownload('PNG'),\n          children: \"Download PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => handleDownload('CSV'),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedBarChart, \"K77eQVFAaxZgbvGoNWFAiCE7OTY=\");\n_c = CombinedBarChart;\nconst getBackgroundColor = index => {\n  const colors = ['#FF5733', '#33FF57', '#3357FF']; // Use your preferred colors\n  return colors[index % colors.length];\n};\nexport default CombinedBarChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedBarChart\");","map":{"version":3,"names":["React","useState","Bar","saveAs","Chart","registerables","jsxDEV","_jsxDEV","register","CombinedBarChart","datasets","_s","labels","length","data","map","entry","date","chartData","dataset","index","label","backgroundColor","getBackgroundColor","totalInvocations","options","scales","x","stacked","y","beginAtZero","plugins","legend","display","position","maintainAspectRatio","menuOpen","setMenuOpen","handleDownload","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","colors","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/CombinedBarChart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { saveAs } from 'file-saver';\r\nimport './CombinedBarChart.css';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst CombinedBarChart = ({ datasets }) => {\r\n  const labels = datasets.length > 0 ? datasets[0].data.map(entry => entry.date) : [];\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: datasets.map((dataset, index) => ({\r\n      label: `Data Table ${index + 1}`,\r\n      backgroundColor: getBackgroundColor(index),\r\n      data: dataset.data.map(entry => entry.totalInvocations),\r\n    })),\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        stacked: false,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleDownload = async format => {\r\n    // ... (same download logic as before)\r\n  };\r\n\r\n  return (\r\n    <div className=\"combined-bar-chart\">\r\n      <div className=\"chart-container\">\r\n        <div className=\"chart\">\r\n          <Bar data={chartData} options={options} />\r\n        </div>\r\n      </div>\r\n      <div className={`download-menu ${menuOpen ? 'open' : ''}`}>\r\n        <button className=\"toggle-button\" onClick={() => setMenuOpen(!menuOpen)}>\r\n          Toggle Download Options\r\n        </button>\r\n        {menuOpen && (\r\n          <div className=\"options\">\r\n            <div className=\"option\" onClick={() => handleDownload('SVG')}>\r\n              Download SVG\r\n            </div>\r\n            <div className=\"option\" onClick={() => handleDownload('PNG')}>\r\n              Download PNG\r\n            </div>\r\n            <div className=\"option\" onClick={() => handleDownload('CSV')}>\r\n              Download CSV\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getBackgroundColor = index => {\r\n  const colors = ['#FF5733', '#33FF57', '#3357FF']; // Use your preferred colors\r\n  return colors[index % colors.length];\r\n};\r\n\r\nexport default CombinedBarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}