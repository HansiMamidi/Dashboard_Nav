{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    setData(prevData => [...prevData, {\n      name,\n      age,\n      email\n    }]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n  const saveRow = rowData => {\n    // Save row data here (e.g., send to the server)\n    console.log(rowData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Add\",\n        onClick: addRow,\n        className: \"p-button-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: data,\n      editMode: \"row\",\n      dataKey: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"name\",\n        header: \"Name\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['name'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"age\",\n        header: \"Age\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['age'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"email\",\n        header: \"Email\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['email'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        body: rowData => /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"pi pi-check\",\n          className: \"p-button-rounded p-button-success p-button-outlined\",\n          onClick: () => saveRow(rowData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this),\n        style: {\n          width: '70px',\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"dxJt1RdPE3Q7JQj64G7x7jFKNl0=\");\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","InputText","Button","DataTable","Column","jsxDEV","_jsxDEV","EditableTable","_s","name","setName","age","setAge","email","setEmail","data","setData","addRow","alert","prevData","onEditorValueChange","props","value","rowIndex","field","updatedData","saveRow","rowData","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","required","type","label","onClick","className","editMode","dataKey","header","editor","body","icon","style","width","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nconst EditableTable = () => {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert('Please fill in all fields.');\n      return;\n    }\n\n    setData((prevData) => [\n      ...prevData,\n      { name, age, email }\n    ]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n\n  const saveRow = (rowData) => {\n    // Save row data here (e.g., send to the server)\n    console.log(rowData);\n  };\n\n  return (\n    <div>\n      <h2>Editable Table</h2>\n      <form>\n        <label htmlFor=\"name\">Name:</label>\n        <InputText id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\n\n        <label htmlFor=\"age\">Age:</label>\n        <InputText id=\"age\" value={age} onChange={(e) => setAge(e.target.value)} required />\n\n        <label htmlFor=\"email\">Email:</label>\n        <InputText id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n\n        <Button type=\"button\" label=\"Add\" onClick={addRow} className=\"p-button-primary\" />\n      </form>\n\n      <DataTable value={data} editMode=\"row\" dataKey=\"email\">\n        <Column field=\"name\" header=\"Name\" editor={(props) => <InputText type=\"text\" value={props.rowData['name']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"age\" header=\"Age\" editor={(props) => <InputText type=\"text\" value={props.rowData['age']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"email\" header=\"Email\" editor={(props) => <InputText type=\"text\" value={props.rowData['email']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column body={(rowData) => <Button icon=\"pi pi-check\" className=\"p-button-rounded p-button-success p-button-outlined\" onClick={() => saveRow(rowData)} />} style={{ width: '70px', textAlign: 'center' }} />\n      </DataTable>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}