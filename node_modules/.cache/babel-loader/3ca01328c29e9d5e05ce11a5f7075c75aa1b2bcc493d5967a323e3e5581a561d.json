{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\HorizontalBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './HorizontalBarChart.css'; // We'll define the chart's container dimensions here\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  date: '2023-08-01',\n  remediation: 10,\n  totalInvocations: 50\n}, {\n  date: '2023-08-02',\n  remediation: 15,\n  totalInvocations: 60\n}\n// Add more data entries here\n];\n\nconst HorizontalBarChart = () => {\n  _s();\n  const [selectedData, setSelectedData] = useState(null);\n  useEffect(() => {\n    const chartCanvas = document.getElementById('myChart');\n    const ctx = chartCanvas.getContext('2d');\n    const chartData = {\n      labels: data.map(entry => entry.date),\n      datasets: [{\n        label: 'Total Invocations',\n        backgroundColor: '#42A5F5',\n        data: data.map(entry => entry.totalInvocations)\n      }]\n    };\n    new Chart(ctx, {\n      type: 'horizontalBar',\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            beginAtZero: true\n          },\n          y: {\n            ticks: {\n              autoSkip: false\n            }\n          }\n        },\n        onClick: (event, elements) => {\n          if (elements.length > 0) {\n            const clickedIndex = elements[0].index;\n            setSelectedData(data[clickedIndex]);\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", selectedData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remediation: \", selectedData.remediation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Invocations: \", selectedData.totalInvocations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(HorizontalBarChart, \"IvRpp3QRKR8Dvuk9BMsN8rcqlU4=\");\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\nvar _c;\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","data","date","remediation","totalInvocations","HorizontalBarChart","_s","selectedData","setSelectedData","chartCanvas","document","getElementById","ctx","getContext","chartData","labels","map","entry","datasets","label","backgroundColor","type","options","scales","x","beginAtZero","y","ticks","autoSkip","onClick","event","elements","length","clickedIndex","index","className","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/HorizontalBarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './HorizontalBarChart.css'; // We'll define the chart's container dimensions here\r\nimport Chart from 'chart.js';\r\n\r\nconst data = [\r\n  { date: '2023-08-01', remediation: 10, totalInvocations: 50 },\r\n  { date: '2023-08-02', remediation: 15, totalInvocations: 60 },\r\n  // Add more data entries here\r\n];\r\n\r\nconst HorizontalBarChart = () => {\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const chartCanvas = document.getElementById('myChart');\r\n    const ctx = chartCanvas.getContext('2d');\r\n\r\n    const chartData = {\r\n      labels: data.map(entry => entry.date),\r\n      datasets: [\r\n        {\r\n          label: 'Total Invocations',\r\n          backgroundColor: '#42A5F5',\r\n          data: data.map(entry => entry.totalInvocations),\r\n        },\r\n      ],\r\n    };\r\n\r\n    new Chart(ctx, {\r\n      type: 'horizontalBar',\r\n      data: chartData,\r\n      options: {\r\n        scales: {\r\n          x: {\r\n            beginAtZero: true,\r\n          },\r\n          y: {\r\n            ticks: {\r\n              autoSkip: false,\r\n            },\r\n          },\r\n        },\r\n        onClick: (event, elements) => {\r\n          if (elements.length > 0) {\r\n            const clickedIndex = elements[0].index;\r\n            setSelectedData(data[clickedIndex]);\r\n          }\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"horizontal-bar-chart\">\r\n      <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\r\n      {selectedData && (\r\n        <div className=\"selected-data\">\r\n          <h3>Selected Data:</h3>\r\n          <p>Date: {selectedData.date}</p>\r\n          <p>Remediation: {selectedData.remediation}</p>\r\n          <p>Total Invocations: {selectedData.totalInvocations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}