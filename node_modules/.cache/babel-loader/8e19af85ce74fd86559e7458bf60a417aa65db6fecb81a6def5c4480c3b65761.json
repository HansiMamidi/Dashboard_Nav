{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport logo from './verizon_logo.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profile, setProfile] = useState([]);\n  const [country, setCountry] = useState('');\n  const [data, setData] = useState([]);\n  const [editingRows, setEditingRows] = useState({});\n  const [countryData, setCountryData] = useState({});\n  const [displayChart, setDisplayChart] = useState(false);\n  const addRow = () => {\n    if (!name || !country || !email || !profile) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    setData(prevData => [...prevData, {\n      name,\n      email,\n      profile,\n      country\n    }]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setEmail('');\n    setProfile([]);\n    setCountry('');\n  };\n  const onRowEditInit = event => {\n    const rowIndex = event.index;\n    let editingRowsCopy = {\n      ...editingRows\n    };\n    editingRowsCopy[rowIndex] = {\n      ...data[rowIndex]\n    };\n    setEditingRows(editingRowsCopy);\n  };\n  const onRowEditSave = event => {\n    const rowIndex = event.index;\n    let updatedData = [...data];\n    updatedData[rowIndex] = editingRows[rowIndex];\n    setData(updatedData);\n    setEditingRows({});\n  };\n  const onRowEditCancel = event => {\n    setEditingRows({});\n  };\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setEditingRows(prevEditingRows => {\n      const updatedRow = {\n        ...prevEditingRows[rowIndex],\n        [field]: value\n      };\n      return {\n        ...prevEditingRows,\n        [rowIndex]: updatedRow\n      };\n    });\n  };\n  const prepareCountryData = () => {\n    const countries = data.map(item => item.country);\n    const countryCount = {};\n    countries.forEach(country => {\n      countryCount[country] = (countryCount[country] || 0) + 1;\n    });\n    setCountryData(countryCount);\n  };\n  useEffect(() => {\n    prepareCountryData();\n  }, [data, prepareCountryData]); // Add prepareCountryData to the dependency array\n\n  const countryDataForChart = {\n    labels: Object.keys(countryData),\n    datasets: [{\n      data: Object.values(countryData),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7C4DFF', '#00D0FF', '#FF5C93'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7C4DFF', '#00D0FF', '#FF5C93']\n    }]\n  };\n  const headerStyles = {\n    backgroundColor: '#000',\n    color: '#fff',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    // Add this line to vertically align items\n    padding: '1rem'\n  };\n  const headerItemStyles = {\n    padding: '0.5rem',\n    cursor: 'pointer',\n    display: 'flex',\n    // Add this line to make the items inside flex container\n    alignItems: 'center' // Add this line to vertically align items\n  };\n\n  const logoStyles = {\n    height: '50px',\n    // Set the desired height for the logo\n    marginRight: '10px' // Add some spacing between the logo and text\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerItemStyles,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.5rem',\n            fontWeight: 'bold',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\",\n            style: logoStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '1.2rem',\n                marginLeft: '1rem',\n                cursor: 'pointer'\n              },\n              onClick: () => setDisplayChart(false),\n              children: \"Home Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '1.2rem',\n                marginLeft: '1rem',\n                cursor: 'pointer'\n              },\n              onClick: () => setDisplayChart(true),\n              children: \"Records\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"XfvmA5ZAgIZh7psNjrKPOn9cfY8=\");\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","useEffect","InputText","Button","DataTable","Column","Chart","logo","jsxDEV","_jsxDEV","EditableTable","_s","name","setName","email","setEmail","profile","setProfile","country","setCountry","data","setData","editingRows","setEditingRows","countryData","setCountryData","displayChart","setDisplayChart","addRow","alert","prevData","onRowEditInit","event","rowIndex","index","editingRowsCopy","onRowEditSave","updatedData","onRowEditCancel","onEditorValueChange","props","value","field","prevEditingRows","updatedRow","prepareCountryData","countries","map","item","countryCount","forEach","countryDataForChart","labels","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","headerStyles","color","display","justifyContent","alignItems","padding","headerItemStyles","cursor","logoStyles","height","marginRight","children","style","fontSize","fontWeight","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","onClick","margin","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport logo from './verizon_logo.jpg';\n\nconst EditableTable = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profile, setProfile] = useState([]);\n  const [country, setCountry] = useState('');\n  const [data, setData] = useState([]);\n  const [editingRows, setEditingRows] = useState({});\n  const [countryData, setCountryData] = useState({});\n  const [displayChart, setDisplayChart] = useState(false);\n\n  const addRow = () => {\n    if (!name || !country || !email || !profile) {\n      alert('Please fill in all fields.');\n      return;\n    }\n\n    setData((prevData) => [\n      ...prevData,\n      { name, email, profile, country }\n    ]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setEmail('');\n    setProfile([]);\n    setCountry('');\n  };\n\n  const onRowEditInit = (event) => {\n    const rowIndex = event.index;\n    let editingRowsCopy = { ...editingRows };\n    editingRowsCopy[rowIndex] = { ...data[rowIndex] };\n    setEditingRows(editingRowsCopy);\n  };\n\n  const onRowEditSave = (event) => {\n    const rowIndex = event.index;\n    let updatedData = [...data];\n    updatedData[rowIndex] = editingRows[rowIndex];\n    setData(updatedData);\n    setEditingRows({});\n  };\n\n  const onRowEditCancel = (event) => {\n    setEditingRows({});\n  };\n\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setEditingRows((prevEditingRows) => {\n      const updatedRow = { ...prevEditingRows[rowIndex], [field]: value };\n      return { ...prevEditingRows, [rowIndex]: updatedRow };\n    });\n  };\n\n  const prepareCountryData = () => {\n    const countries = data.map((item) => item.country);\n    const countryCount = {};\n    countries.forEach((country) => {\n      countryCount[country] = (countryCount[country] || 0) + 1;\n    });\n    setCountryData(countryCount);\n  };\n\n  useEffect(() => {\n    prepareCountryData();\n  }, [data, prepareCountryData]); // Add prepareCountryData to the dependency array\n\n  const countryDataForChart = {\n    labels: Object.keys(countryData),\n    datasets: [\n      {\n        data: Object.values(countryData),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7C4DFF', '#00D0FF', '#FF5C93'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#7C4DFF', '#00D0FF', '#FF5C93']\n      }\n    ]\n  };\n\n  const headerStyles = {\n    backgroundColor: '#000',\n    color: '#fff',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center', // Add this line to vertically align items\n    padding: '1rem',\n  };\n\n  const headerItemStyles = {\n    padding: '0.5rem',\n    cursor: 'pointer',\n    display: 'flex', // Add this line to make the items inside flex container\n    alignItems: 'center', // Add this line to vertically align items\n  };\n\n  const logoStyles = {\n    height: '50px', // Set the desired height for the logo\n    marginRight: '10px', // Add some spacing between the logo and text\n  };\n\n  return (\n    <div>\n      <div style={headerStyles}>\n        <div style={headerItemStyles}>\n          <span style={{ fontSize: '0.5rem', fontWeight: 'bold', display: 'flex', alignItems: 'center' }}>\n            <img src={logo} alt=\"logo\" style={logoStyles} />\n            <span>\n              <span style={{ fontSize: '1.2rem', marginLeft: '1rem', cursor: 'pointer' }} onClick={() => setDisplayChart(false)}>\n                Home Page\n              </span>\n              <span style={{ fontSize: '1.2rem', marginLeft: '1rem', cursor: 'pointer' }} onClick={() => setDisplayChart(true)}>\n                Records\n              </span>\n            </span>\n          </span>\n        </div>\n      </div>\n\n      <div style={{ margin: '1rem' }}>\n        {/* Rest of the code remains unchanged */}\n        {/* ... */}\n      </div>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}