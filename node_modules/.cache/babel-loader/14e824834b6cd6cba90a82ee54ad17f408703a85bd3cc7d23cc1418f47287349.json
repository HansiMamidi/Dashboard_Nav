{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\HorizontalBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst data1 = [{\n  date: '2023-08-01',\n  remediation: 10,\n  totalInvocations: 50\n}, {\n  date: '2023-08-02',\n  remediation: 15,\n  totalInvocations: 60\n}\n// Add more data entries here\n];\n\nconst data2 = [{\n  date: '2023-08-01',\n  remediation: 5,\n  totalInvocations: 30\n}, {\n  date: '2023-08-02',\n  remediation: 12,\n  totalInvocations: 40\n}\n// Add more data entries here\n];\n\nconst HorizontalBarChart = () => {\n  _s();\n  const [selectedData, setSelectedData] = useState(null);\n  const chartData = {\n    labels: data1.map(entry => entry.date),\n    datasets: [{\n      label: 'Total Invocations (Data 1)',\n      backgroundColor: 'rgba(66, 165, 245, 0.6)',\n      // Blue color for Data 1\n      data: data1.map(entry => entry.totalInvocations)\n    }, {\n      label: 'Total Invocations (Data 2)',\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      // Red color for Data 2\n      data: data2.map(entry => entry.totalInvocations)\n    }]\n  };\n  const options = {\n    indexAxis: 'y',\n    // Use 'y' for horizontal bar chart\n    scales: {\n      x: {\n        beginAtZero: true\n      },\n      y: {\n        ticks: {\n          autoSkip: false\n        }\n      }\n    },\n    onClick: (_, elements) => {\n      if (elements.length > 0) {\n        const clickedIndex = elements[0].index;\n        setSelectedData(data1[clickedIndex]); // You can choose data1 or data2 here\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), selectedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", selectedData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remediation: \", selectedData.remediation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Invocations: \", selectedData.totalInvocations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(HorizontalBarChart, \"c4bOALSTODQR6VX0keyz1PASxSo=\");\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\nvar _c;\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"names":["React","useState","Bar","Chart","registerables","jsxDEV","_jsxDEV","register","data1","date","remediation","totalInvocations","data2","HorizontalBarChart","_s","selectedData","setSelectedData","chartData","labels","map","entry","datasets","label","backgroundColor","data","options","indexAxis","scales","x","beginAtZero","y","ticks","autoSkip","onClick","_","elements","length","clickedIndex","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/HorizontalBarChart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst data1 = [\r\n  { date: '2023-08-01', remediation: 10, totalInvocations: 50 },\r\n  { date: '2023-08-02', remediation: 15, totalInvocations: 60 },\r\n  // Add more data entries here\r\n];\r\n\r\nconst data2 = [\r\n  { date: '2023-08-01', remediation: 5, totalInvocations: 30 },\r\n  { date: '2023-08-02', remediation: 12, totalInvocations: 40 },\r\n  // Add more data entries here\r\n];\r\n\r\nconst HorizontalBarChart = () => {\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const chartData = {\r\n    labels: data1.map(entry => entry.date),\r\n    datasets: [\r\n      {\r\n        label: 'Total Invocations (Data 1)',\r\n        backgroundColor: 'rgba(66, 165, 245, 0.6)', // Blue color for Data 1\r\n        data: data1.map(entry => entry.totalInvocations),\r\n      },\r\n      {\r\n        label: 'Total Invocations (Data 2)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.6)', // Red color for Data 2\r\n        data: data2.map(entry => entry.totalInvocations),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    indexAxis: 'y', // Use 'y' for horizontal bar chart\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n      },\r\n      y: {\r\n        ticks: {\r\n          autoSkip: false,\r\n        },\r\n      },\r\n    },\r\n    onClick: (_, elements) => {\r\n      if (elements.length > 0) {\r\n        const clickedIndex = elements[0].index;\r\n        setSelectedData(data1[clickedIndex]); // You can choose data1 or data2 here\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"horizontal-bar-chart\">\r\n      <Bar data={chartData} options={options} />\r\n      {selectedData && (\r\n        <div className=\"selected-data\">\r\n          <h3>Selected Data:</h3>\r\n          <p>Date: {selectedData.date}</p>\r\n          <p>Remediation: {selectedData.remediation}</p>\r\n          <p>Total Invocations: {selectedData.totalInvocations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}