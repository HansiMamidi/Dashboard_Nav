{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhans\\\\prime-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { RowEditor } from 'primereact/roweditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    setData(prevData => [...prevData, {\n      name,\n      age,\n      email\n    }]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Add\",\n        onClick: addRow,\n        className: \"p-button-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: data,\n      editMode: \"row\",\n      dataKey: \"email\",\n      rowEditor: true,\n      onRowEditInit: () => {},\n      onRowEditSave: () => {},\n      onRowEditCancel: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"name\",\n        header: \"Name\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['name'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"age\",\n        header: \"Age\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['age'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"email\",\n        header: \"Email\",\n        editor: props => /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: props.rowData['email'],\n          onChange: e => onEditorValueChange(props, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        body: rowData => /*#__PURE__*/_jsxDEV(RowEditor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }, this),\n        style: {\n          width: '70px',\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"dxJt1RdPE3Q7JQj64G7x7jFKNl0=\");\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","InputText","Button","DataTable","Column","RowEditor","jsxDEV","_jsxDEV","EditableTable","_s","name","setName","age","setAge","email","setEmail","data","setData","addRow","alert","prevData","onEditorValueChange","props","value","rowIndex","field","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","required","type","label","onClick","className","editMode","dataKey","rowEditor","onRowEditInit","onRowEditSave","onRowEditCancel","header","editor","rowData","body","style","width","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/mhans/prime-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { RowEditor } from 'primereact/roweditor';\n\nconst EditableTable = () => {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [data, setData] = useState([]);\n\n  const addRow = () => {\n    if (!name || !age || !email) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n\n    setData((prevData) => [\n      ...prevData,\n      { name, age, email }\n    ]);\n\n    // Clear input fields after adding data to the table\n    setName('');\n    setAge('');\n    setEmail('');\n  };\n\n  const onEditorValueChange = (props, value) => {\n    const rowIndex = props.rowIndex;\n    const field = props.field;\n    setData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[rowIndex][field] = value;\n      return updatedData;\n    });\n  };\n\n  return (\n    <div>\n      <h2>Editable Table</h2>\n      <form>\n        <label htmlFor=\"name\">Name:</label>\n        <InputText id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\n\n        <label htmlFor=\"age\">Age:</label>\n        <InputText id=\"age\" value={age} onChange={(e) => setAge(e.target.value)} required />\n\n        <label htmlFor=\"email\">Email:</label>\n        <InputText id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n\n        <Button type=\"button\" label=\"Add\" onClick={addRow} className=\"p-button-primary\" />\n      </form>\n\n      <DataTable\n        value={data}\n        editMode=\"row\"\n        dataKey=\"email\"\n        rowEditor\n        onRowEditInit={() => {}}\n        onRowEditSave={() => {}}\n        onRowEditCancel={() => {}}\n      >\n        <Column field=\"name\" header=\"Name\" editor={(props) => <InputText type=\"text\" value={props.rowData['name']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"age\" header=\"Age\" editor={(props) => <InputText type=\"text\" value={props.rowData['age']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column field=\"email\" header=\"Email\" editor={(props) => <InputText type=\"text\" value={props.rowData['email']} onChange={(e) => onEditorValueChange(props, e.target.value)} />} />\n        <Column body={(rowData) => <RowEditor />} style={{ width: '70px', textAlign: 'center' }} />\n      </DataTable>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}